{"version":3,"file":"static/js/Pokedex.0365c614.chunk.js","mappings":"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","sources":["pages/Pokedex/components/Card.tsx","pages/Pokedex/components/SearchBar.tsx","pages/Pokedex/components/Pagination.tsx","pages/Pokedex/components/Filter.tsx","pages/Pokedex/components/Buttons.tsx","pages/Pokedex/components/Header.tsx","pages/Pokedex/UseFilter.ts","pages/Pokedex/Pokedex.tsx"],"sourcesContent":["import { Link } from 'react-router-dom';\nimport clsx from 'clsx';\n\nimport { Icon } from '@/newComponents';\nimport { EVIndex, EVName, PokedexFrom, PokedexList, Pokemon } from '@/types/Pokemon';\n\nimport { Display, Filter } from '../Pokedex';\n\ntype Props = {\n  pokemon: Pokemon;\n  filter: Filter;\n  display: Display;\n};\n\nconst Abilities = ({ pokemon }: { pokemon: Pokemon }) => {\n  return (\n    <>\n      {pokemon.abilities.map((ability) => (\n        <span\n          key={ability}\n          className=\"rounded bg-blue-100 px-1.5 py-0.5 text-center text-xs font-semibold text-blue-800\"\n        >\n          {ability}\n        </span>\n      ))}\n      {pokemon.hiddenAbility && (\n        <span className=\"rounded bg-gray-100 px-1.5 py-0.5 text-center text-xs font-semibold text-gray-800\">\n          {[pokemon.hiddenAbility]}\n        </span>\n      )}\n    </>\n  );\n};\n\nconst EVs = ({ pokemon }: { pokemon: Pokemon }) => {\n  return (\n    <>\n      {Array(6)\n        .fill(0)\n        .map((_, i) => ({\n          key: EVName[EVIndex[String(i) as keyof typeof EVIndex] as unknown as keyof typeof EVName],\n          val: pokemon.EVs[i],\n        }))\n        .filter((item) => item.val > 0)\n        .map((item) => `${item.key}: ${item.val}`)\n        .map((t) => (\n          <span\n            key={t}\n            className=\"rounded bg-blue-100 px-1.5 py-0.5 text-center text-xs font-semibold text-blue-800\"\n          >\n            {t}\n          </span>\n        ))}\n    </>\n  );\n};\n\nexport function Card({ pokemon, filter, display }: Props) {\n  const pid = PokedexList.includes(filter.pokedex)\n    ? (pokemon[filter.pokedex as PokedexFrom] || 0).toString().padStart(3, '0')\n    : pokemon.pid.toString().padStart(4, '0');\n\n  return (\n    <div\n      className={clsx(\n        'mt-8 px-4 pt-2 md:mt-20',\n        'flex flex-col gap-y-2',\n        'rounded-xl bg-white',\n        'shadow-list-items hover:shadow-list-items--hover',\n        'hover:translate-x-[-0.2rem] hover:translate-y-[-0.2rem]',\n        'relative'\n      )}\n    >\n      <header className={'relative h-6 md:h-auto'}>\n        <span className=\"hidden whitespace-nowrap md:block\">#{pid}</span>\n        <Icon.Game.PmIcon pm={pokemon} className=\"absolute bottom-0 md:-right-8\" />\n      </header>\n      <hr className=\"border-0 border-t-[1px] border-[#A29834]\" />\n      <div className=\"flex h-full flex-col justify-between gap-y-2\">\n        <div className={clsx('grid grid-cols-1 md:grid-cols-2')}>\n          <div className=\"flex flex-col items-center gap-y-1 md:items-start\">\n            <p className=\"text-center md:text-start\">\n              <span className=\"block whitespace-nowrap md:hidden\">#{pid}</span>\n              {pokemon.nameZh}\n              {pokemon.altForm && (\n                <span className=\"block text-xs font-thin\">({pokemon.altForm})</span>\n              )}\n            </p>\n            <div className=\"flex gap-x-1\">\n              {pokemon.types.map((type) => (\n                <Icon.Game.Type type={type} key={type} />\n              ))}\n            </div>\n          </div>\n          <div className=\"hidden md:block\">\n            <div className=\"flex flex-col gap-y-2\">\n              <Abilities pokemon={pokemon} />\n            </div>\n          </div>\n        </div>\n        <div className={clsx(display.EVs || display.ability ? 'block' : 'hidden')}>\n          {display.ability && (\n            <p className=\"mt-2 flex flex-col flex-wrap justify-center gap-2 whitespace-nowrap md:flex-row md:justify-start\">\n              <Abilities pokemon={pokemon} />\n            </p>\n          )}\n          {display.EVs && (\n            <p className=\"mt-2 flex flex-col flex-wrap justify-center gap-2 whitespace-nowrap md:flex-row md:justify-start\">\n              <EVs pokemon={pokemon} />\n            </p>\n          )}\n        </div>\n      </div>\n      <Link\n        className={'stretchedLink'}\n        to={`/pokedex/${pokemon.nameZh}${pokemon.altForm ? '-' + pokemon.altForm : ''}`}\n      />\n    </div>\n  );\n}\n","import clsx from 'clsx';\n\nimport { Indicator } from '@/newComponents/common';\nimport { Icon } from '@/newComponents';\nimport { BoolKeys } from '@/utils';\n\nimport { FilterButton } from '.';\nimport { Display } from '../Pokedex';\n\ntype Props = {\n  value: string;\n  onChange: (val: string) => void;\n\n  display: Display;\n  toggleDisplay: (key: BoolKeys<Display>[keyof Display]) => (bool: boolean) => void;\n\n  hasFilter: Boolean;\n};\n\nexport function SearchBar({ value, onChange, display, toggleDisplay, hasFilter }: Props) {\n  return (\n    <>\n      <div className=\"relative my-2 w-full\">\n        <div className=\"pointer-events-none absolute inset-y-0 left-0 flex items-center pl-3\">\n          <Icon.Search className=\"h-5 w-5\" />\n        </div>\n        <input\n          type=\"search\"\n          className={clsx(\n            'block w-full rounded-full border border-gray-300',\n            'bg-gray-50 p-2 pl-10 text-sm text-gray-900',\n            'search'\n          )}\n          placeholder=\"搜尋 名稱(中/英/日), 樣子\"\n          value={value}\n          onChange={(e) => {\n            onChange(e.target.value);\n          }}\n        />\n        <div className=\"absolute inset-y-0 right-0 flex items-center pr-3\">\n          <FilterButton\n            checked={display.advancedFilter}\n            toggleState={toggleDisplay('advancedFilter')}\n          />\n          {hasFilter && (\n            <div className=\"relative -top-3 right-6\">\n              <Indicator />\n            </div>\n          )}\n        </div>\n      </div>\n    </>\n  );\n}\n","import clsx from 'clsx';\n\nimport { Icon } from '@/newComponents';\nimport { ValueKeys } from '@/utils';\nimport { Filter } from '../Pokedex';\n\ntype Props = {\n  currentPage: number;\n  totalPages: number;\n  updateNumberState: (\n    key: ValueKeys<Filter, number>[keyof Filter],\n    fn: (val: number) => number\n  ) => void;\n};\n\nconst pagingButtonLength = window.screen.width < 768 ? 1 : 3;\n\nexport function Pagination({ currentPage, totalPages, updateNumberState }: Props) {\n  return (\n    <nav>\n      <ul className=\"inline-flex -space-x-px text-sm\">\n        <li>\n          <button\n            onClick={() => updateNumberState('page', (n) => Math.max(1, n - 1))}\n            className={clsx(\n              'ml-0 flex h-8 items-center justify-center',\n              'rounded-l-lg border border-gray-300',\n              'bg-white px-3 leading-tight text-gray-500',\n              'hover:bg-gray-100 hover:text-gray-700',\n              currentPage === 1 && 'cursor-not-allowed'\n            )}\n          >\n            前一頁\n          </button>\n        </li>\n        {currentPage > pagingButtonLength && (\n          <>\n            <li>\n              <button\n                onClick={() => updateNumberState('page', () => 1)}\n                className={clsx(\n                  'ml-0 flex h-8 items-center justify-center',\n                  'border border-gray-300',\n                  'bg-white px-3 leading-tight text-gray-500',\n                  'hover:bg-gray-100 hover:text-gray-700'\n                )}\n              >\n                1\n              </button>\n            </li>\n            <li\n              className={clsx(\n                'ml-0 flex h-8 items-center justify-center',\n                'border border-gray-300',\n                'bg-white px-3 leading-tight text-gray-500'\n              )}\n            >\n              ...\n            </li>\n          </>\n        )}\n        {new Array(totalPages)\n          .fill(0)\n          .map((_, i) => i + 1)\n          .filter((n) => {\n            return Math.abs(n - currentPage) < pagingButtonLength;\n          })\n          .map((n) => (\n            <li key={n}>\n              <button\n                onClick={() => updateNumberState('page', () => n)}\n                className={clsx(\n                  'ml-0 flex h-8 items-center justify-center',\n                  'border border-gray-300',\n                  'px-3 leading-tight',\n                  'hover:bg-gray-100 hover:text-gray-700',\n                  n === currentPage ? 'bg-gray-100 text-gray-700' : 'bg-white text-gray-500'\n                )}\n              >\n                {n}\n              </button>\n            </li>\n          ))}\n        {totalPages - currentPage >= pagingButtonLength && (\n          <>\n            <li\n              className={clsx(\n                'ml-0 flex h-8 items-center justify-center',\n                'border border-gray-300',\n                'bg-white px-3 leading-tight text-gray-500'\n              )}\n            >\n              ...\n            </li>\n            <li>\n              <button\n                onClick={() => updateNumberState('page', () => totalPages)}\n                className={clsx(\n                  'ml-0 flex h-8 items-center justify-center',\n                  'border border-gray-300',\n                  'bg-white px-3 leading-tight text-gray-500',\n                  'hover:bg-gray-100 hover:text-gray-700'\n                )}\n              >\n                {totalPages}\n              </button>\n            </li>\n          </>\n        )}\n        <li>\n          <button\n            onClick={() => {\n              updateNumberState('page', (n) => {\n                return Math.min(totalPages, n + 1);\n              });\n            }}\n            className={clsx(\n              'ml-0 flex h-8 items-center justify-center',\n              'rounded-r-lg border border-gray-300',\n              'bg-white px-3 leading-tight text-gray-500',\n              'hover:bg-gray-100 hover:text-gray-700',\n              currentPage === totalPages && 'cursor-not-allowed'\n            )}\n          >\n            後一頁\n          </button>\n        </li>\n      </ul>\n    </nav>\n  );\n}\n\nexport function PaginationMobile({\n  currentPage,\n  totalPages,\n  updateNumberState,\n  length,\n}: Props & { length: number }) {\n  return (\n    <>\n      <button onClick={() => updateNumberState('page', (n) => Math.max(1, n - 1))}>\n        <Icon.ArrowBack className={clsx(currentPage === 1 ? 'fill-gray-400' : 'fill-white')} />\n      </button>\n      <p>\n        第{currentPage}頁，共{totalPages}頁 ｜ {length}種符合\n      </p>\n      <button onClick={() => updateNumberState('page', (n) => Math.min(totalPages, n + 1))}>\n        <Icon.ArrowForward\n          className={clsx(currentPage === totalPages ? 'fill-gray-400' : 'fill-white')}\n        />\n      </button>\n    </>\n  );\n}\n","import { ChangeEvent } from 'react';\n\nimport { Icon } from '@/newComponents';\n\ntype Props = {\n  checked: boolean;\n  toggleState: (bool: boolean) => void;\n};\n\nexport function FilterButton({ checked, toggleState }: Props) {\n  return (\n    <>\n      <input\n        type=\"checkbox\"\n        name={'filter'}\n        id={'filter'}\n        className=\"hidden\"\n        checked={checked}\n        onChange={(event: ChangeEvent<HTMLInputElement>) => {\n          toggleState(event.target.checked);\n        }}\n      />\n      <label htmlFor={'filter'} className=\"flex cursor-pointer flex-col items-center\">\n        <Icon.Filter className=\"h-6 w-6\" />\n      </label>\n    </>\n  );\n}\n","import clsx from 'clsx';\n\ntype Props = {\n  list: { name: string; val: string }[];\n  currVal: string | Set<string>;\n  updateState: (val: string) => void;\n};\n\nexport function Buttons({ list, currVal, updateState }: Props) {\n  return (\n    <div className=\"flex flex-wrap gap-4\">\n      {list.map((item) => {\n        return (\n          <button\n            key={item.name}\n            className={clsx(\n              'rounded-xl px-2 py-1',\n              'whitespace-nowrap shadow-list-items',\n              typeof currVal === 'string'\n                ? currVal === item.val\n                  ? 'bg-secondary'\n                  : 'bg-secondary/40'\n                : currVal.has(item.val)\n                ? 'bg-secondary'\n                : 'bg-secondary/40'\n            )}\n            onClick={() => {\n              updateState(item.val);\n            }}\n          >\n            {item.name}\n          </button>\n        );\n      })}\n    </div>\n  );\n}\n","import clsx from 'clsx';\n\nimport { SubTitleSlide, TitleSlide, Toggle } from '@/newComponents/common';\nimport { Icon } from '@/newComponents';\nimport { EVName, TypeEnum } from '@/types/Pokemon';\nimport { BoolKeys, ValueKeys } from '@/utils';\n\nimport { Filter, Display } from '../Pokedex';\nimport { SearchBar, Buttons } from '.';\n\ntype Props = {\n  filter: Filter;\n  abilities: string[];\n  updateState: (key: ValueKeys<Filter, string>[keyof Filter]) => (val: string) => void;\n  updateSetState: (key: ValueKeys<Filter, Set<string>>[keyof Filter]) => (val: string) => void;\n\n  display: Display;\n  toggleDisplay: (key: BoolKeys<Display>[keyof Display]) => (bool: boolean) => void;\n};\n\nexport function Header({\n  filter,\n  abilities,\n  updateState,\n  updateSetState,\n  display,\n  toggleDisplay,\n}: Props) {\n  const typeUpdate = updateSetState('types');\n  const abilityUpdate = updateState('ability');\n\n  const hasFilter = [filter.ability, filter.EV].filter(Boolean).length > 0 || filter.tags.size > 0;\n\n  const filterList = [\n    { value: filter.ability, name: '特性', key: 'ability' },\n    { value: EVName[filter.EV as keyof typeof EVName] || '', name: '努力值', key: 'EV' },\n  ];\n\n  const filterListSet = [\n    [...filter.tags].map((tag) => ({ value: tag, name: 'tag', key: 'tags' })),\n  ].flat();\n\n  return (\n    <header>\n      <div className=\"flex flex-col justify-between gap-x-2 md:flex-row md:items-center\">\n        <div className=\"flex items-center gap-2\">\n          <div className={clsx('rounded-xl p-2', 'bg-custom-red', 'hidden md:block')}>\n            <Icon.Books className=\"h-5 w-5 fill-current\" />\n          </div>\n          <h2 className=\"text-xl\">圖鑑清單</h2>\n        </div>\n        <div className=\"flex w-full items-center gap-x-3 md:w-96\">\n          <SearchBar\n            value={filter.keyword}\n            onChange={updateState('keyword')}\n            display={display}\n            toggleDisplay={toggleDisplay}\n            hasFilter={hasFilter}\n          />\n        </div>\n      </div>\n      <div className=\"flex flex-col gap-2\">\n        <SubTitleSlide title=\"圖鑑分類\" />\n        <Buttons\n          list={[\n            { name: '帕底亞', val: 'paldea' },\n            { name: '北上', val: 'kitakami' },\n            { name: '藍莓', val: 'blueberry' },\n            { name: '洗翠', val: 'hisui' },\n            { name: '全國', val: 'national' },\n            { name: 'HOME入境 / 活動', val: 'home' },\n          ]}\n          currVal={filter.pokedex}\n          updateState={updateState('pokedex')}\n        />\n        <SubTitleSlide title=\"屬性\" />\n        <div className=\"flex w-full flex-wrap justify-items-center gap-x-4 gap-y-3 pb-2 pl-2\">\n          {Object.keys(TypeEnum).map((type) => (\n            <button onClick={() => typeUpdate(type)} key={type}>\n              <Icon.Game.Type\n                type={type}\n                className={clsx(\n                  'h-8 w-8',\n                  filter.types.size > 0 && !filter.types.has(type) && 'opacity-30'\n                )}\n              />\n            </button>\n          ))}\n        </div>\n      </div>\n      <div className={clsx('mt-2 flex-col gap-2', display.advancedFilter ? 'flex' : 'hidden')}>\n        <TitleSlide title=\"進階搜尋\" />\n        <SubTitleSlide title=\"特性\" />\n        <div className=\"block md:hidden\">\n          <Toggle\n            text=\"顯示特性\"\n            checked={display.ability}\n            handleChange={toggleDisplay('ability')}\n          />\n        </div>\n        <div className=\"relative mb-2 w-60\">\n          <div className=\"pointer-events-none absolute inset-y-0 left-0 flex items-center pl-3\">\n            <Icon.Search className=\"h-5 w-5\" />\n          </div>\n          <input\n            type=\"search\"\n            className={clsx(\n              'block w-full rounded-lg border border-gray-300',\n              'bg-gray-50 p-2 pl-10 text-sm text-gray-900'\n            )}\n            placeholder=\"搜尋特性\"\n            value={filter.ability}\n            onChange={(e) => {\n              abilityUpdate(e.target.value);\n            }}\n          />\n        </div>\n        <Buttons\n          list={abilities\n            .filter((ability) => {\n              return ability.split('').some((char) => filter.ability.includes(char));\n            })\n            .map((ability) => ({ name: ability, val: ability }))}\n          currVal={filter.ability}\n          updateState={abilityUpdate}\n        />\n        <SubTitleSlide title=\"努力值\" />\n        <Toggle text=\"顯示努力值\" checked={display.EVs} handleChange={toggleDisplay('EVs')} />\n        <span className=\"text-sm\">(篩選單獨只有這此項的清單)</span>\n        <Buttons\n          list={[\n            { name: 'HP', val: 'HP' },\n            { name: '攻擊', val: 'Atk' },\n            { name: '防禦', val: 'Def' },\n            { name: '特攻', val: 'SpA' },\n            { name: '特防', val: 'SpD' },\n            { name: '速度', val: 'Spe' },\n          ]}\n          currVal={filter.EV}\n          updateState={updateState('EV')}\n        />\n        <SubTitleSlide title=\"tags(複選，交集)\" />\n        <Buttons\n          list={[\n            { name: '傳說的寶可夢', val: '傳說的寶可夢' },\n            { name: '幻之寶可夢', val: '幻之寶可夢' },\n            { name: '悖謬寶可夢', val: '悖謬寶可夢' },\n            { name: '准傳說的寶可夢', val: '准傳說的寶可夢' },\n            { name: '朱版限定', val: '朱版限定' },\n            { name: '紫版限定', val: '紫版限定' },\n          ]}\n          currVal={filter.tags}\n          updateState={updateSetState('tags')}\n        />\n      </div>\n      <div\n        className={clsx(\n          'flex-col gap-2',\n          display.advancedFilter === false && hasFilter ? 'flex' : 'hidden'\n        )}\n      >\n        <SubTitleSlide title=\"進階篩選項目：\" />\n        <div className=\"flex flex-wrap gap-4\">\n          {filterList\n            .filter(({ value }) => value !== '')\n            .map(({ value, name, key }) => (\n              <span\n                key={key}\n                className={clsx(\n                  'flex items-center gap-x-2',\n                  'rounded-xl bg-amber-100 px-2 py-1 shadow-list-items'\n                )}\n              >\n                {name}：{value}\n                <Icon.Close\n                  className=\"h-3 w-3 cursor-pointer\"\n                  onClick={() => {\n                    updateState(key as Parameters<typeof updateState>[0])('');\n                  }}\n                />\n              </span>\n            ))}\n          {filterListSet.map(({ value, name, key }) => (\n            <span\n              key={`${name}-${value}`}\n              className={clsx(\n                'flex items-center gap-x-2',\n                'rounded-xl bg-amber-100 px-2 py-1 shadow-list-items',\n                'whitespace-nowrap'\n              )}\n            >\n              {name}：{value}\n              <Icon.Close\n                className=\"h-3 w-3 cursor-pointer\"\n                onClick={() => {\n                  updateSetState(key as keyof typeof updateSetState)(value);\n                }}\n              />\n            </span>\n          ))}\n        </div>\n      </div>\n    </header>\n  );\n}\n","import { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\n\nimport { BoolKeys, ValueKeys } from '@/utils';\nimport { PokedexFrom } from '@/types/Pokemon';\nimport { getJsonCache } from '@/store';\n\nimport { Filter, Display } from './Pokedex';\n\nconst localStorageKey = 'pokeDexPage';\n\nexport function UseFilter() {\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  let cacheObj = getJsonCache(localStorageKey);\n  useEffect(() => {\n    for (const key of Object.keys(cacheObj)) {\n      if (searchParams.get(key) === null) {\n        setSearchParams((prev) => {\n          prev.set(key, cacheObj[key as keyof typeof cacheObj]);\n          return prev;\n        });\n      } else {\n      }\n    }\n  }, [cacheObj, searchParams, setSearchParams]);\n\n  const filter: Filter = {\n    keyword: searchParams.get('keyword') || '',\n    pokedex: (searchParams.get('pokedex') || 'paldea') as PokedexFrom | 'home' | 'national',\n    page: Number(searchParams.get('page') || 1),\n    types: new Set((searchParams.get('types') || '').split('-').filter(Boolean)),\n    ability: searchParams.get('ability') || '',\n    EV: searchParams.get('EV') || '',\n    tags: new Set((searchParams.get('tags') || '').split('-').filter(Boolean)),\n  };\n\n  const [display, setDisplay] = useState<Display>({\n    advancedFilter: false,\n    EVs: false,\n    ability: false,\n  });\n\n  const updateState = (key: ValueKeys<Filter, string>[keyof Filter]) => {\n    return (val: string) => {\n      if (val === '') {\n        setSearchParams((prev) => {\n          prev.delete(key);\n          delete cacheObj[key as keyof typeof cacheObj];\n\n          localStorage.setItem(localStorageKey, JSON.stringify(cacheObj));\n          return prev;\n        });\n      } else {\n        setSearchParams((prev) => {\n          if (prev.has(key) && prev.get(key) === val) {\n            prev.delete(key);\n            delete cacheObj[key as keyof typeof cacheObj];\n          } else {\n            prev.set(key, val);\n            cacheObj[key as keyof typeof cacheObj] = val;\n          }\n          prev.delete('page');\n          delete cacheObj['page'];\n\n          localStorage.setItem(localStorageKey, JSON.stringify(cacheObj));\n          return prev;\n        });\n      }\n    };\n  };\n\n  const updateSetState = (key: ValueKeys<Filter, Set<string>>[keyof Filter]) => {\n    return (val: string) => {\n      setSearchParams((prev) => {\n        const vals = new Set((prev.get(key) || '').split('-').filter(Boolean));\n        if (vals.has(val)) {\n          vals.delete(val);\n        } else {\n          vals.add(val);\n        }\n\n        if (vals.size === 0) {\n          prev.delete(key);\n          delete cacheObj[key as keyof typeof cacheObj];\n        } else {\n          prev.set(key, [...vals].join('-'));\n          cacheObj[key as keyof typeof cacheObj] = [...vals].join('-');\n        }\n\n        prev.delete('page');\n        delete cacheObj['page'];\n\n        localStorage.setItem(localStorageKey, JSON.stringify(cacheObj));\n        return prev;\n      });\n    };\n  };\n\n  const updateNumberState = (\n    key: ValueKeys<Filter, number>[keyof Filter],\n    fn: (val: number) => number\n  ) => {\n    setSearchParams((prev) => {\n      const val = prev.get(key) || '1';\n      const newVal = fn(Number(val));\n      prev.set(key, String(newVal));\n\n      return prev;\n    });\n  };\n\n  const toggleDisplay = (key: BoolKeys<Display>[keyof Display]) => {\n    return (bool: boolean) => {\n      setDisplay((prev) => {\n        const newDisplay = {\n          ...prev,\n          [key]: bool,\n        };\n        return newDisplay;\n      });\n    };\n  };\n\n  useEffect(() => {\n    const cacheObj: Record<string, string> = {};\n    searchParams.forEach((val, key) => {\n      cacheObj[key] = val;\n    });\n\n    if (Object.keys(cacheObj).length > 0) {\n      localStorage.setItem(localStorageKey, JSON.stringify(cacheObj));\n    }\n  }, [searchParams]);\n\n  return {\n    filter,\n    updateState,\n    updateNumberState,\n    updateSetState,\n\n    display,\n    toggleDisplay,\n  };\n}\n","import clsx from 'clsx';\n\nimport { PokedexFrom } from '@/types/Pokemon';\nimport { Hr, Loading } from '@/newComponents/common';\nimport { usePokemonListContext } from '@/newComponents/contexts';\nimport { Card, Pagination, PaginationMobile, Header } from './components';\nimport { UseFilter } from './UseFilter';\nimport { useEffect } from 'react';\nimport { filterPokemonList } from '@/store';\n\nexport type Filter = {\n  keyword: string;\n  pokedex: PokedexFrom | 'home' | 'national';\n  page: number;\n  types: Set<string>;\n  ability: string;\n  EV: string;\n  tags: Set<string>;\n};\n\nexport type Display = {\n  advancedFilter: boolean;\n  ability: boolean;\n  EVs: boolean;\n};\n\nconst itemsPerPage = 30;\n\nfunction Pokedex() {\n  const { filter, updateState, updateNumberState, updateSetState, display, toggleDisplay } =\n    UseFilter();\n\n  let { pokemonList: data } = usePokemonListContext();\n\n  useEffect(() => {\n    document.title = `${filter.pokedex} Pokédex`;\n  }, [filter.pokedex]);\n\n  if (data.length === 0) {\n    return <Loading />;\n  }\n\n  const abilities = [\n    ...new Set(\n      data\n        .map((pm) => pm.abilities.concat([pm.hiddenAbility || '']))\n        .flat()\n        .filter(Boolean)\n    ),\n  ].sort();\n\n  data = filterPokemonList(data, filter);\n\n  const totalPages = Math.ceil(data.length / itemsPerPage);\n  const startIndex = (filter.page - 1) * itemsPerPage;\n  const currentData = data.slice(startIndex, startIndex + itemsPerPage);\n\n  return (\n    <div className=\"mb-4 flex flex-col gap-y-4\">\n      <Header\n        filter={filter}\n        abilities={abilities}\n        updateState={updateState}\n        updateSetState={updateSetState}\n        display={display}\n        toggleDisplay={toggleDisplay}\n      />\n      <Hr />\n      <p className={clsx(data.length > 0 && 'hidden')}>查無符合項目，請調整搜尋項目。</p>\n      {data.length > 0 && (\n        <div className=\"grid grid-cols-list-mobile justify-around gap-4 pt-4 pb-8 md:grid-cols-list\">\n          {currentData.map((pm) => (\n            <Card pokemon={pm} key={pm.link} filter={filter} display={display} />\n          ))}\n        </div>\n      )}\n      <footer className=\"hidden justify-end md:flex\">\n        <Pagination\n          currentPage={filter.page}\n          totalPages={totalPages}\n          updateNumberState={updateNumberState}\n        />\n      </footer>\n      <footer\n        className={clsx(\n          'fixed bottom-0 left-0 right-0 flex h-12 items-center justify-between',\n          'bg-primary/60 px-4 text-white md:hidden'\n        )}\n      >\n        <PaginationMobile\n          currentPage={filter.page}\n          totalPages={totalPages}\n          updateNumberState={updateNumberState}\n          length={data.length}\n        />\n      </footer>\n    </div>\n  );\n}\n\nexport default Pokedex;\n"],"names":["Abilities","pokemon","abilities","map","ability","className","hiddenAbility","EVs","Array","fill","_","i","key","EVName","EVIndex","String","val","filter","item","t","Card","display","pid","PokedexList","includes","pokedex","toString","padStart","clsx","pm","nameZh","altForm","types","type","to","SearchBar","value","onChange","toggleDisplay","hasFilter","placeholder","e","target","FilterButton","checked","advancedFilter","toggleState","pagingButtonLength","window","screen","width","Pagination","currentPage","totalPages","updateNumberState","onClick","n","Math","max","abs","min","PaginationMobile","length","name","id","event","htmlFor","Buttons","list","currVal","updateState","has","Header","updateSetState","typeUpdate","abilityUpdate","EV","Boolean","tags","size","filterList","filterListSet","tag","flat","keyword","title","Object","keys","TypeEnum","text","handleChange","split","some","char","localStorageKey","useSearchParams","searchParams","setSearchParams","cacheObj","getJsonCache","useEffect","get","prev","set","page","Number","Set","useState","setDisplay","forEach","localStorage","setItem","JSON","stringify","delete","fn","newVal","vals","add","join","bool","UseFilter","data","usePokemonListContext","pokemonList","document","concat","sort","filterPokemonList","ceil","startIndex","currentData","slice","Hr","link"],"sourceRoot":""}