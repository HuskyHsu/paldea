{"version":3,"file":"static/js/Pokemon.e830dc32.chunk.js","mappings":"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","sources":["pages/Pokemon/components/Header.tsx","pages/Pokemon/components/BaseInfo.tsx","pages/Pokemon/components/RadarChart.tsx","pages/Pokemon/components/Statistic.tsx","pages/Pokemon/components/Evolution.tsx","pages/Pokemon/components/Moves.tsx","pages/Pokemon/Pokemon.tsx","pages/Pokemon/api.ts"],"sourcesContent":["import clsx from 'clsx';\n\nimport { Icon } from '@/newComponents';\nimport { BgFromType, BgToType, FullPokemon } from '@/types/Pokemon';\n\ntype Props = {\n  pm: FullPokemon;\n};\n\nexport function Header({ pm }: Props) {\n  return (\n    <header className=\"h-40\">\n      <div className=\"relative flex h-full justify-center\">\n        <div className=\"z-10 w-32\">\n          <Icon.Game.PmIcon pm={pm} />\n        </div>\n\n        {/* bg banner */}\n        <div\n          className={clsx(\n            'absolute -inset-x-4 bottom-0 z-0 h-full',\n            'md:inset-x-0 md:-mx-4 md:rounded-t-xl',\n            'bg-gradient-to-b',\n            BgFromType[pm.types[0] as keyof typeof BgFromType],\n            BgToType[(pm.types.length > 1 ? pm.types[1] : pm.types[0]) as keyof typeof BgToType]\n          )}\n        />\n      </div>\n    </header>\n  );\n}\n","import clsx from 'clsx';\n\nimport { Icon, SubTitleSlide } from '@/newComponents';\nimport { BgType, FullPokemon } from '@/types/Pokemon';\n\ntype Props = {\n  pm: FullPokemon;\n};\n\ntype ContentProps = { pm: FullPokemon };\n\ntype Render = {\n  title: string;\n  Content: ({ pm }: ContentProps) => JSX.Element;\n};\n\nconst genderRatioMap = {\n  0: [100, 0],\n  31: [87.5, 12.5],\n  63: [75, 25],\n  127: [50, 50],\n  191: [25, 75],\n  225: [12.5, 87.5],\n  254: [0, 100],\n  255: [0, 0],\n};\n\nconst renderData: Render[] = [\n  {\n    title: '英文名稱',\n    Content: ({ pm }: ContentProps) => <>{pm.nameEn}</>,\n  },\n  {\n    title: '日文名稱',\n    Content: ({ pm }: ContentProps) => <>{pm.nameJp}</>,\n  },\n  {\n    title: '屬性',\n    Content: ({ pm }: ContentProps) => (\n      <span className=\"flex gap-2 text-white\">\n        {pm.types.map((type) => (\n          <span\n            className={clsx(\n              'flex items-center gap-1 rounded-xl pl-2 pr-3 text-sm',\n              BgType[type as keyof typeof BgType]\n            )}\n            key={type}\n          >\n            <Icon.Game.Type type={type} className=\"h-6 w-6\" />\n            {type}\n          </span>\n        ))}\n      </span>\n    ),\n  },\n  {\n    title: '性別比例',\n    Content: ({ pm }: ContentProps) => (\n      <span className=\"flex gap-4 whitespace-nowrap\">\n        <span>♂：{genderRatioMap[pm.genderRatio as keyof typeof genderRatioMap][0]}%</span>\n        <span>♀：{genderRatioMap[pm.genderRatio as keyof typeof genderRatioMap][1]}%</span>\n      </span>\n    ),\n  },\n  {\n    title: '特性',\n    Content: ({ pm }: ContentProps) => (\n      <span className=\"flex flex-wrap justify-center gap-2 md:justify-start\">\n        {pm.abilities.map((ability) => (\n          <span\n            key={ability}\n            className={clsx(\n              'py-px',\n              'h-7 w-full md:w-2/5',\n              'border-2 border-solid border-secondary',\n              'rounded-full bg-secondary/30 text-center text-sm text-black',\n              'whitespace-nowrap'\n            )}\n          >\n            {ability}\n          </span>\n        ))}\n      </span>\n    ),\n  },\n  {\n    title: '隱藏特性',\n    Content: ({ pm }: ContentProps) => {\n      if (pm.hiddenAbility === null) {\n        return <></>;\n      }\n      return (\n        <span className=\"flex flex-wrap justify-center gap-2 md:justify-start\">\n          <span\n            className={clsx(\n              'py-px',\n              'h-7 w-full md:w-2/5',\n              'border-2 border-solid border-scarlet',\n              'rounded-full bg-scarlet/30 text-center text-sm text-black',\n              'whitespace-nowrap'\n            )}\n          >\n            {pm.hiddenAbility}\n          </span>\n        </span>\n      );\n    },\n  },\n  {\n    title: '蛋群',\n    Content: ({ pm }: ContentProps) => (\n      <span className=\"flex gap-2\">\n        {pm.eggGroups.map((egg) => (\n          <span\n            key={egg}\n            className={clsx(\n              'py-px',\n              'h-7 w-1/2 md:w-2/5',\n              'border-2 border-solid border-secondary',\n              'rounded-full bg-secondary/30 text-center text-sm text-black',\n              'whitespace-nowrap'\n            )}\n          >\n            {egg}\n          </span>\n        ))}\n      </span>\n    ),\n  },\n];\n\nexport function BaseInfo({ pm }: Props) {\n  return (\n    <>\n      <SubTitleSlide title=\"基本資訊\" />\n      <ul className=\"grid grid-cols-2 gap-x-2 gap-y-4 md:gap-y-6\">\n        {renderData.map((data, index) => (\n          <li\n            className={clsx('flex flex-col items-start', 'gap-1', 'md:flex-row md:text-left')}\n            key={index}\n          >\n            <span\n              className={clsx(\n                'md:py-px',\n                'pr-3 md:w-2/5 md:pr-0',\n                'border-b-[1px] border-solid border-custom-gold md:border-2',\n                'text-start text-sm text-black md:rounded-full md:text-center',\n                'whitespace-nowrap'\n              )}\n            >\n              {data.title}\n            </span>\n            <p className=\"w-full\">\n              <data.Content pm={pm} />\n            </p>\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n}\n","import clsx from 'clsx';\n\nconst radius = 100;\nconst center = [radius * 1.5, radius * 1.5];\n\ntype RadarPorps = {\n  stats: number[];\n  color: string;\n  EVs: number[];\n};\n\ntype LinePorps = {\n  deg: number;\n};\n\ntype TextPorps = {\n  deg?: number;\n  text?: string;\n  value: number;\n};\n\nconst getPosition = (deg: number, radius: number) => {\n  const radians = (deg * 2 * Math.PI) / 360;\n  return [center[0] + radius * Math.cos(radians), center[1] + radius * Math.sin(radians)];\n};\n\nconst Line = ({ deg }: LinePorps) => {\n  const point1 = getPosition(deg, radius);\n  const point2 = getPosition(deg + 180, radius);\n\n  return (\n    <line\n      x1={point1[0]}\n      y1={point1[1]}\n      x2={point2[0]}\n      y2={point2[1]}\n      stroke=\"#FFFFFF\"\n      strokeWidth=\"2\"\n    />\n  );\n};\n\nconst Text = ({ deg, text, value }: TextPorps) => {\n  const point = getPosition(deg as number, radius * 1.25);\n  const color =\n    (text?.length ?? 0) > 2 ? 'fill-red-600 stroke-[0.5px] stroke-red-600' : 'fill-slate-600';\n\n  return (\n    <>\n      <text\n        x={point[0]}\n        y={point[1] - 5}\n        fontSize=\"1.1em\"\n        textAnchor=\"middle\"\n        className={clsx(color)}\n      >\n        {text}\n      </text>\n      <text\n        x={point[0]}\n        y={point[1] + 15}\n        fontSize=\"1.1em\"\n        textAnchor=\"middle\"\n        className={clsx(color)}\n      >\n        {value}\n      </text>\n    </>\n  );\n};\n\nconst TotalText = ({ value }: TextPorps) => {\n  const point = getPosition(0, 0);\n\n  return (\n    <>\n      <text x={point[0]} y={point[1] + 10} fontSize=\"1.5em\" textAnchor=\"middle\" fill=\"#f3f4f6\">\n        {value}\n      </text>\n    </>\n  );\n};\n\nexport function RadarChart({\n  stats: [hp, atk, def, spAtk, spDef, speed],\n  color = '#339DDF',\n  EVs: [ev_hp, ev_atk, ev_def, ev_spAtk, ev_spDef, ev_speed],\n}: RadarPorps) {\n  const total = hp + atk + def + spAtk + spDef + speed;\n\n  const bgPoints = Array.from(Array(6).keys())\n    .map((_, i) => 30 + i * 60)\n    .map((deg) => getPosition(deg, radius));\n\n  const speciesStrength = [\n    getPosition(270, (hp * radius) / 255),\n    getPosition(330, (atk * radius) / 170),\n    getPosition(30, (def * radius) / 184),\n    getPosition(90, (speed * radius) / 200),\n    getPosition(150, (spDef * radius) / 184),\n    getPosition(210, (spAtk * radius) / 170),\n  ];\n\n  const labels = [\n    { name: 'HP', value: hp, deg: 270, plus: ev_hp },\n    { name: '攻擊', value: atk, deg: 330, plus: ev_atk },\n    { name: '防禦', value: def, deg: 30, plus: ev_def },\n    { name: '速度', value: speed, deg: 90, plus: ev_speed },\n    { name: '特防', value: spDef, deg: 150, plus: ev_spDef },\n    { name: '特攻', value: spAtk, deg: 210, plus: ev_spAtk },\n  ];\n\n  return (\n    <svg className=\"h-auto w-full\" viewBox={`0 0 ${center[0] * 2} ${center[1] * 2}`}>\n      <polygon points={bgPoints.flat().join(', ')} fill=\"#e9e9e9\" />\n      <g>\n        <Line deg={-30} />\n        <Line deg={30} />\n        <Line deg={90} />\n      </g>\n      <polygon points={speciesStrength.flat().join(', ')} className={color} fillOpacity=\"0.6\" />\n      <g>\n        {labels.map((label) => (\n          <Text\n            key={label.deg}\n            text={label.name + (label.plus > 0 ? `+${label.plus}` : '')}\n            value={label.value}\n            deg={label.deg}\n          />\n        ))}\n        <TotalText text={'total'} value={total} />\n      </g>\n    </svg>\n  );\n}\n","import { useState } from 'react';\nimport clsx from 'clsx';\n\nimport { RadarChart } from './RadarChart';\nimport { FillType, FullPokemon } from '@/types/Pokemon';\nimport { SubTitleSlide } from '@/newComponents';\n\ntype Props = {\n  pokemon: FullPokemon;\n};\n\nfunction calStatistic(\n  species: number,\n  individual: number,\n  base: number,\n  lv: number,\n  isHp = false,\n  nature?: string\n) {\n  if (isHp) {\n    return Math.floor((Math.floor(species * 2 + individual + base / 4) * lv) / 100 + 10 + lv);\n  }\n  const value = (Math.floor(species * 2 + individual + base / 4) * lv) / 100 + 5;\n  if (nature === undefined) {\n    return Math.floor(value);\n  }\n  return nature === 'up' ? Math.floor(value * 1.1) : Math.floor(value * 0.9);\n}\n\nexport function Statistic({ pokemon }: Props) {\n  const [lv, setLv] = useState(75);\n  const [targetSpe, setTargetSpe] = useState(\n    calStatistic(pokemon.baseStats[5], 31, 0, lv, false, undefined) - 1\n  );\n\n  const speEv = Array(253)\n    .fill(0)\n    .map((_, i) => i)\n    .map((ev) => {\n      return calStatistic(pokemon.baseStats[5], 31, ev, lv, false, undefined);\n    })\n    .findIndex((val) => val > targetSpe);\n\n  const cases = [\n    { name: '最高', individual: 31, base: 252, nature: 'up' },\n    { name: '標準', individual: 31, base: 252, nature: undefined },\n    { name: '上升', individual: 31, base: 0, nature: 'up' },\n    { name: '初始', individual: 31, base: 0, nature: undefined },\n    { name: '下降', individual: 31, base: 0, nature: 'down' },\n    { name: '最低', individual: 0, base: 0, nature: 'down' },\n  ];\n\n  return (\n    <>\n      <SubTitleSlide title=\"能力值\" />\n      <div className=\"grid grid-cols-12 gap-3 text-gray-600\">\n        <div className=\"col-span-full flex justify-center md:col-span-5\">\n          <div className=\"w-10/12 md:w-full\">\n            <RadarChart\n              stats={pokemon.baseStats}\n              EVs={pokemon.EVs}\n              color={FillType[pokemon.types[0] as keyof typeof FillType]}\n            />\n          </div>\n        </div>\n        <div className=\"col-span-12 space-y-3 md:col-span-7\">\n          <label className=\"block font-medium\">Lv： {lv}</label>\n          <input\n            type=\"range\"\n            value={lv}\n            min=\"1\"\n            max=\"100\"\n            step=\"1\"\n            className=\"h-1 w-full cursor-pointer appearance-none rounded-lg bg-gray-200\"\n            onChange={(e) => setLv(parseInt(e.target.value))}\n          />\n          <table className=\"w-full table-fixed text-center text-sm\">\n            <thead className=\"bg-gray-100 text-xs uppercase\">\n              <tr className=\"bg-custom-gold/50 text-gray-100\">\n                <th scope=\"col\" className=\"whitespace-nowrap py-1\">\n                  情境\n                </th>\n                {['Hp', '攻擊', '防禦', '特攻', '特防', '速度'].map((type) => (\n                  <th scope=\"col\" className=\"whitespace-nowrap py-1\" key={type}>\n                    {type}\n                  </th>\n                ))}\n              </tr>\n            </thead>\n            <tbody>\n              {cases.map((c) => (\n                <tr\n                  className={clsx(\n                    'border-b text-center',\n                    c.name === '初始' ? 'bg-gray-200' : 'hover:bg-gray-100 hover:text-gray-900'\n                  )}\n                  key={c.name}\n                >\n                  <td className=\"py-1\">{c.name}</td>\n                  {pokemon.baseStats.map((stat, i) => (\n                    <td className=\"py-1\" key={i}>\n                      {calStatistic(stat, c.individual, c.base, lv, i === 0, c.nature)}\n                    </td>\n                  ))}\n                </tr>\n              ))}\n            </tbody>\n          </table>\n          <input\n            type=\"range\"\n            value={targetSpe}\n            min={calStatistic(pokemon.baseStats[5], 31, 0, lv, false, undefined) - 1}\n            max={calStatistic(pokemon.baseStats[5], 31, 252, lv, false, undefined) - 1}\n            step=\"1\"\n            className=\"h-1 w-full cursor-pointer appearance-none rounded-lg bg-gray-200\"\n            onChange={(e) => setTargetSpe(parseInt(e.target.value))}\n          />\n          <p>\n            若對手的速度{targetSpe} ，需要{speEv}點速度努力值才能先攻\n            <span className=\"block text-sm\">(同等級下，我方個體值滿，且無性格影響下)</span>\n          </p>\n        </div>\n        <ul className=\"col-span-12 text-center text-sm text-gray-500 md:text-start\">\n          <li className=\"px-2\">最高：個體值最大、努力值滿、性格⇧</li>\n          <li className=\"px-2\">標準：個體值最大、努力值滿、性格－</li>\n          <li className=\"px-2\">上升：個體值最大、無努力值、性格⇧</li>\n          <li>\n            <span className=\"bg-gray-200 px-2 text-gray-600\">\n              初始：個體值最大、無努力值、性格－\n            </span>\n          </li>\n          <li className=\"px-2\">下降：個體值最大、無努力值、性格⇩</li>\n          <li className=\"px-2\">最低：個體值最低、無努力值、性格⇩</li>\n        </ul>\n      </div>\n    </>\n  );\n}\n","import { Link } from 'react-router-dom';\nimport clsx from 'clsx';\n\nimport { BgFromType, BgToType, FullPokemon, SubPokemon } from '@/types/Pokemon';\nimport { Icon } from '@/newComponents';\n\ntype Props = {\n  pm: FullPokemon;\n};\n\nconst rowSpanMap = {\n  1: 'row-span-1',\n  2: 'row-span-2',\n  3: 'row-span-3',\n  8: 'row-[span_8_/_span_8]',\n};\n\nconst Condition = ({ condition, className = '' }: { condition: string; className?: string }) => {\n  return (\n    <span className={clsx('relative flex h-full w-full items-center text-right', className)}>\n      <span\n        className={clsx(\n          'absolute',\n          'inset-x-0',\n          'top-1/2 -translate-y-1/3',\n          'text-sm',\n          'flex justify-center text-center',\n          'text-[12px] md:text-base'\n        )}\n      >\n        {condition} ⇨\n      </span>\n    </span>\n  );\n};\n\nconst SubCard = ({ pm, className = '' }: { pm: SubPokemon; className?: string }) => {\n  return (\n    <div className={clsx(className, 'h-24 w-24 md:h-28 md:w-28', 'relative -mt-6')}>\n      <span\n        className={clsx(\n          'absolute',\n          'rounded-full',\n          'inset-x-0 h-5 md:h-7',\n          'bg-gradient-to-r',\n          'top-2/3 -translate-y-2/3',\n          BgFromType[pm.types[0] as keyof typeof BgFromType],\n          BgToType[(pm.types.length > 1 ? pm.types[1] : pm.types[0]) as keyof typeof BgToType]\n        )}\n      />\n      <span className={clsx('absolute', 'inset-x-0', 'top-1/3 -translate-y-1/2')}>\n        <Icon.Game.PmIcon pm={pm} />\n      </span>\n      <span className={clsx('absolute', 'inset-x-0', '-bottom-1', 'text-xs md:text-base')}>\n        {pm.nameZh}\n        {pm.altForm ? <span className=\"text-xs\">({pm.altForm})</span> : ''}\n      </span>\n      <Link\n        className={'stretchedLink'}\n        to={`/pokedex/${pm.nameZh}${pm.altForm ? '-' + pm.altForm : ''}`}\n      />\n    </div>\n  );\n};\n\nexport function Evolution({ pm }: Props) {\n  // 1-1-1\n  // 1-1-2\n  // 1-2-2\n  // 1-1\n  // 1-2\n  // 1-3\n  // 1-8\n\n  // const isMobile = window.screen.width < 768;\n  // mobile case:\n  // if cols >= 3 => transpose grid\n\n  const cols = pm.evolves?.to.find((evolve) => evolve.to) ? 'grid-cols-5' : 'grid-cols-3';\n  const rows = rowSpanMap[(pm.evolves?.to.length || 1) as keyof typeof rowSpanMap];\n\n  let keyId = 0;\n\n  const evolutionPath = pm.evolves?.to.reduce((acc, evolution, i) => {\n    let rowElement = [] as JSX.Element[];\n\n    const secRows = rowSpanMap[(evolution.to?.length || 1) as keyof typeof rowSpanMap];\n\n    const rowsClass =\n      rows === 'row-span-1' && secRows === 'row-span-2' ? 'row-span-2' : 'row-span-1';\n\n    if (i === 0 && pm.evolves) {\n      rowElement.push(\n        <SubCard\n          key={keyId}\n          pm={pm.evolves.from}\n          className={clsx(\n            'text-xs',\n            rows === 'row-span-1' && secRows === 'row-span-2' ? 'row-span-2' : rows\n          )}\n        />\n      );\n    }\n\n    rowElement = rowElement.concat([\n      <Condition condition={evolution.condition} className={rowsClass} key={keyId + 1} />,\n      <SubCard key={keyId + 2} pm={evolution} className={clsx('text-xs', rowsClass)} />,\n    ]);\n\n    acc = acc.concat(rowElement.slice(0));\n    keyId += 3;\n    if (evolution.to) {\n      evolution.to.forEach((evolution_) => {\n        acc = acc.concat([\n          <Condition condition={evolution_.condition} key={keyId} />,\n          <SubCard key={keyId + 1} pm={evolution_} className={clsx('text-xs')} />,\n        ]);\n        keyId += 2;\n      });\n    }\n\n    return acc;\n  }, [] as JSX.Element[]);\n\n  return (\n    <div\n      className={clsx(\n        'grid items-center justify-center gap-y-8 text-center',\n        'justify-items-center',\n        cols\n      )}\n    >\n      {evolutionPath}\n    </div>\n  );\n}\n","import { useState } from 'react';\nimport clsx from 'clsx';\n\nimport { Accuracy, FullMove, FullPokemon, LevelMap, PMMove } from '@/types/Pokemon';\nimport { Icon, PokemonBadge } from '@/newComponents';\nimport { api } from '@/utils';\n\ntype Props = {\n  pm: FullPokemon;\n};\n\nconst columns = [\n  //   {\n  //     header: '挑選',\n  //     value: (row: PMMove) => (\n  //       <input\n  //         type=\"checkbox\"\n  //         checked={false}\n  //         onChange={(e) => {}}\n  //         className=\"h-4 w-4 rounded border-gray-300 bg-gray-100 text-blue-600 focus:ring-2 focus:ring-blue-500\"\n  //       />\n  //     ),\n  //     meta: 'w-1/12',\n  //   },\n  {\n    header: '來源',\n    value: (row: PMMove) =>\n      'level' in row\n        ? row.level < 1\n          ? LevelMap[row.level.toString() as keyof typeof LevelMap]\n          : `Lv${row.level.toString().padStart(2, '0')}`\n        : `TM${row.TMPid.toString().padStart(3, '0')}`,\n    meta: 'w-2/12',\n  },\n  {\n    header: '招式名稱',\n    value: (row: PMMove) => (\n      <a\n        href={`https://wiki.52poke.com/zh-hant/${row.nameZh}（招式）`}\n        target=\"_blank\"\n        rel=\"noreferrer\"\n        className=\"text-blue-800 underline\"\n      >\n        {row.nameZh}\n      </a>\n    ),\n    meta: 'w-2/12',\n  },\n  {\n    header: '屬性',\n    value: (row: PMMove) => <Icon.Game.Type type={row.type} className=\"h-6 w-full\" />,\n    meta: 'w-1/12',\n  },\n  {\n    header: '分類',\n    value: (row: PMMove) => <Icon.Game.MoveCategory type={row.category} className=\"h-6 w-full\" />,\n    meta: 'w-1/12',\n  },\n  {\n    header: '威力',\n    value: (row: PMMove) =>\n      row.power < 1 ? Accuracy[row.power.toString() as keyof typeof Accuracy] : row.power,\n    meta: 'w-2/12',\n  },\n  {\n    header: '命中',\n    value: (row: PMMove) =>\n      row.accuracy < 1 ? Accuracy[row.accuracy.toString() as keyof typeof Accuracy] : row.accuracy,\n    meta: 'w-2/12',\n  },\n  {\n    header: 'PP',\n    value: (row: PMMove) => row.PP,\n    meta: 'w-1/12',\n  },\n];\n\nfunction MoveDetail({ move }: { move: FullMove }) {\n  return (\n    <div className=\"flex flex-col gap-y-4 text-gray-500\">\n      <h6 className=\"text-lg font-bold\">升等/進化/回憶招式</h6>\n      <div className=\"flex flex-wrap gap-2\">\n        {move.levelingUps.map((pm) => {\n          let text = `-Lv${pm.level}`;\n          if (pm.level < 1) {\n            text = `-${LevelMap[pm.level]}`;\n          }\n\n          return <PokemonBadge pm={pm} key={pm.link} text={text} />;\n        })}\n      </div>\n      <h6 className=\"text-lg font-bold\">遺傳招式(模仿香草)</h6>\n      <div className=\"flex flex-wrap gap-2\">\n        {move.egg.map((pm) => {\n          return <PokemonBadge pm={pm} key={pm.link} />;\n        })}\n      </div>\n    </div>\n  );\n}\n\nexport function Moves({ pm }: Props) {\n  const allMoves: PMMove[] = (pm.moves.levelingUps as PMMove[])\n    .concat(pm.moves.eggMoves as PMMove[])\n    .concat(pm.moves.TMs as PMMove[]);\n\n  const [expandedPanels, setExpandedPanels] = useState<Set<string>>(new Set());\n  const [moveMap, setMoveMap] = useState<Record<string, FullMove>>({});\n\n  const handleClick = async (panelKey: string, nameZh: string) => {\n    const updatedPanels = new Set(expandedPanels);\n    if (updatedPanels.has(panelKey)) {\n      updatedPanels.delete(panelKey);\n    } else {\n      updatedPanels.add(panelKey);\n    }\n\n    const moveData = await api<FullMove>(`/data/move/${nameZh}.json`);\n\n    setMoveMap((prev) => {\n      prev[nameZh] = moveData;\n      return prev;\n    });\n\n    setExpandedPanels(updatedPanels);\n  };\n\n  return (\n    <div className=\"-mx-4 md:mx-0\">\n      <ul className=\"text-sm\">\n        <li className={clsx('sticky top-0 flex bg-custom-gold/50', 'py-1 text-gray-100 md:-top-4')}>\n          {columns.map((col) => (\n            <span\n              className={clsx('whitespace-nowrap py-1 px-2 text-center', col.meta)}\n              key={col.header}\n            >\n              {col.header}\n            </span>\n          ))}\n        </li>\n        {allMoves\n          .map((move) => {\n            const key = `${move.pid}-${'level' in move ? move.level : move.TMPid}`;\n            const lilist = [\n              <li\n                className=\"flex cursor-pointer border-b-[1px] py-1\"\n                key={key}\n                onClick={() => {\n                  handleClick(key, move.nameZh);\n                }}\n              >\n                {columns.map((col) => (\n                  <span\n                    className={clsx(\n                      'whitespace-nowrap py-1 px-2 text-center leading-6',\n                      'flex justify-center',\n                      col.meta\n                    )}\n                    key={col.header}\n                  >\n                    {col.value(move)}\n                  </span>\n                ))}\n              </li>,\n            ];\n\n            if (expandedPanels.has(key)) {\n              lilist.push(\n                <li className={clsx('flex border-b-[1px] p-4')} key={`${key}-d`}>\n                  <MoveDetail move={moveMap[move.nameZh as keyof typeof moveMap]} />\n                </li>\n              );\n            }\n\n            return lilist;\n          })\n          .flat()}\n      </ul>\n    </div>\n  );\n}\n","import { useEffect, useState } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport clsx from 'clsx';\n\nimport { SubTitleSlide } from '@/newComponents';\nimport { usePokemonListContext } from '@/newComponents/contexts';\nimport { usePokemonInfo } from './api';\nimport { BaseInfo, Evolution, Header, Moves, Statistic } from './components';\n\nfunction TabButtom({\n  title,\n  selectTab,\n  setTab,\n}: {\n  title: string;\n  selectTab: string;\n  setTab: (title: string) => void;\n}) {\n  return (\n    <li className=\"mr-2\">\n      <button\n        className={clsx(\n          'inline-block rounded-t-lg border-b-2 p-2 md:p-4',\n          selectTab === title\n            ? 'border-custom-gold text-custom-gold'\n            : 'border-transparent hover:border-gray-300 hover:text-gray-600'\n        )}\n        onClick={() => setTab(title)}\n      >\n        {title}\n      </button>\n    </li>\n  );\n}\n\nfunction PokemonInfo() {\n  const localStorageKey = 'pokemonPage';\n\n  const navigate = useNavigate();\n  const { nameId = '噴火龍' } = useParams();\n  const [name, altForm] = nameId.split('-');\n  const { pokemonList } = usePokemonListContext();\n  const [tab, setTab] = useState(() => {\n    const savedData = localStorage.getItem(localStorageKey) || '基本資訊';\n    return savedData;\n  });\n\n  useEffect(() => {\n    localStorage.setItem(localStorageKey, tab);\n  }, [tab]);\n\n  let { link } = pokemonList.find(\n    (pm) => pm.nameZh === name && (altForm !== undefined ? pm.altForm === altForm : true)\n  ) || { link: undefined };\n\n  if (link === undefined) {\n    ({ link } = pokemonList.find((pm) => pm.link === nameId) || { link: undefined });\n  }\n\n  if (link === undefined) {\n    link = '4';\n  }\n\n  const { data: pm, status } = usePokemonInfo(link);\n\n  if (pokemonList.length === 0 || status !== 'success') {\n    return <></>;\n  }\n\n  return (\n    <div className=\"flex w-full justify-center\">\n      <div className=\"-mt-4 flex w-full max-w-3xl flex-col gap-4\">\n        <Header pm={pm} />\n        <h2 className=\"-my-2 text-2xl\">\n          #{pm.pid.toString().padStart(4, '0')} {pm.nameZh}\n          {pm.altForm && <span className=\"text-sm\">({pm.altForm})</span>}\n          <a\n            href={`https://wiki.52poke.com/zh-hant/${pm.nameZh}`}\n            target=\"_blank\"\n            rel=\"noreferrer\"\n            className=\"ml-2 font-bold text-blue-800 underline\"\n          >\n            wiki\n          </a>\n        </h2>\n\n        <div className=\"border-b border-gray-200 text-center text-sm font-medium text-gray-500\">\n          <ul className=\"-mb-px flex flex-wrap\">\n            <TabButtom title=\"基本資訊\" selectTab={tab} setTab={setTab} />\n            <TabButtom title=\"進化途徑\" selectTab={tab} setTab={setTab} />\n            <TabButtom title=\"招式清單\" selectTab={tab} setTab={setTab} />\n          </ul>\n        </div>\n\n        {tab === '基本資訊' && (\n          <>\n            <BaseInfo pm={pm} />\n            <Statistic pokemon={pm} />\n          </>\n        )}\n\n        {tab === '進化途徑' && (\n          <>\n            {pm.evolves !== undefined && (\n              <>\n                <SubTitleSlide title=\"進化途徑\" />\n                <Evolution pm={pm} />\n              </>\n            )}\n          </>\n        )}\n\n        {tab === '招式清單' && (\n          <>\n            <SubTitleSlide title=\"招式清單\" />\n            <Moves pm={pm} />\n          </>\n        )}\n\n        <button onClick={() => navigate(-1)}>back</button>\n      </div>\n    </div>\n  );\n}\n\nexport default PokemonInfo;\n","import { useQuery } from '@tanstack/react-query';\nimport { api } from '@/utils';\nimport { FullMove, FullPokemon } from '@/types/Pokemon';\n\nexport const usePokemonInfo = (link: string = '906') => {\n  const { data, status, ...rest } = useQuery<FullPokemon>([`pokemon:${link}`], () =>\n    api<FullPokemon>(`/data/pm/${link}.json`)\n  );\n\n  return {\n    status,\n    data: data as FullPokemon,\n    ...rest,\n  };\n};\n\nexport const useMoveInfo = (name: string) => {\n  const { data, status, ...rest } = useQuery<FullMove>([`move:${name}`], () =>\n    api<FullMove>(`/data/move/${name}.json`)\n  );\n\n  return {\n    status,\n    data: data as FullMove,\n    ...rest,\n  };\n};\n"],"names":["Header","pm","className","clsx","BgFromType","types","BgToType","length","genderRatioMap","renderData","title","Content","nameEn","nameJp","map","type","BgType","genderRatio","abilities","ability","hiddenAbility","eggGroups","egg","BaseInfo","data","index","radius","center","getPosition","deg","radians","Math","PI","cos","sin","Line","point1","point2","x1","y1","x2","y2","stroke","strokeWidth","Text","text","value","point","color","x","y","fontSize","textAnchor","TotalText","fill","RadarChart","stats","hp","atk","def","spAtk","spDef","speed","EVs","ev_hp","ev_atk","ev_def","ev_spAtk","ev_spDef","ev_speed","total","bgPoints","Array","from","keys","_","i","speciesStrength","labels","name","plus","viewBox","points","flat","join","fillOpacity","label","calStatistic","species","individual","base","lv","isHp","nature","floor","undefined","Statistic","pokemon","useState","setLv","baseStats","targetSpe","setTargetSpe","speEv","ev","findIndex","val","cases","FillType","min","max","step","onChange","e","parseInt","target","scope","c","stat","rowSpanMap","Condition","condition","SubCard","nameZh","altForm","to","Evolution","cols","evolves","find","evolve","rows","keyId","evolutionPath","reduce","acc","evolution","rowElement","secRows","rowsClass","push","concat","slice","forEach","evolution_","columns","header","row","level","LevelMap","toString","padStart","TMPid","meta","href","rel","category","power","Accuracy","accuracy","PP","MoveDetail","move","levelingUps","link","Moves","allMoves","moves","eggMoves","TMs","Set","expandedPanels","setExpandedPanels","moveMap","setMoveMap","handleClick","panelKey","updatedPanels","has","delete","add","api","moveData","prev","col","key","pid","lilist","onClick","TabButtom","selectTab","setTab","localStorageKey","navigate","useNavigate","useParams","nameId","split","pokemonList","usePokemonListContext","localStorage","getItem","tab","useEffect","setItem","useQuery","status","rest","usePokemonInfo"],"sourceRoot":""}