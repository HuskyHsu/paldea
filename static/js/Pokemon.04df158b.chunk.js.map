{"version":3,"file":"static/js/Pokemon.04df158b.chunk.js","mappings":"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","sources":["pages/Pokemon/components/Header.tsx","pages/Pokemon/components/BaseInfo.tsx","pages/Pokemon/Pokemon.tsx","pages/Pokemon/api.ts"],"sourcesContent":["import clsx from 'clsx';\n\nimport { Icon } from '@/newComponents';\nimport { BgFromType, BgToType, FullPokemon } from '@/types/Pokemon';\n\ntype Props = {\n  pm: FullPokemon;\n};\n\nexport function Header({ pm }: Props) {\n  return (\n    <header>\n      <div className=\"relative flex justify-center\">\n        <div className=\"z-10 w-32\">\n          <Icon.Game.PmIcon pm={pm} />\n        </div>\n\n        {/* bg banner */}\n        <div\n          className={clsx(\n            'absolute -inset-x-4 bottom-0 z-0 h-3/5 md:inset-x-0',\n            'md:rounded-2xl',\n            'bg-gradient-to-b',\n            BgFromType[pm.types[0] as keyof typeof BgFromType],\n            BgToType[(pm.types.length > 1 ? pm.types[1] : pm.types[0]) as keyof typeof BgToType]\n          )}\n        />\n      </div>\n    </header>\n  );\n}\n","import clsx from 'clsx';\n\nimport { Icon, TitleSlide } from '@/newComponents';\nimport { BgType, FullPokemon } from '@/types/Pokemon';\n\ntype Props = {\n  pm: FullPokemon;\n};\n\ntype ContentProps = { pm: FullPokemon };\n\ntype Render = {\n  title: string;\n  Content: ({ pm }: ContentProps) => JSX.Element;\n};\n\nconst genderRatioMap = {\n  0: [100, 0],\n  31: [87.5, 12.5],\n  63: [75, 25],\n  127: [50, 50],\n  191: [25, 75],\n  225: [12.5, 87.5],\n  254: [0, 100],\n  255: [0, 0],\n};\n\nconst renderData: Render[] = [\n  {\n    title: '英文名稱',\n    Content: ({ pm }: ContentProps) => <>{pm.nameEn}</>,\n  },\n  {\n    title: '日文名稱',\n    Content: ({ pm }: ContentProps) => <>{pm.nameJp}</>,\n  },\n  {\n    title: '屬性',\n    Content: ({ pm }: ContentProps) => (\n      <span className=\"flex gap-2 text-white\">\n        {pm.types.map((type) => (\n          <span\n            className={clsx(\n              'flex items-center gap-1 rounded-xl pl-2 pr-3 text-sm',\n              BgType[type as keyof typeof BgType]\n            )}\n            key={type}\n          >\n            <Icon.Game.Type type={type} className=\"h-6 w-6\" />\n            {type}\n          </span>\n        ))}\n      </span>\n    ),\n  },\n  {\n    title: '性別比例',\n    Content: ({ pm }: ContentProps) => (\n      <span className=\"flex gap-4 whitespace-nowrap\">\n        <span>♂：{genderRatioMap[pm.genderRatio as keyof typeof genderRatioMap][0]}%</span>\n        <span>♀：{genderRatioMap[pm.genderRatio as keyof typeof genderRatioMap][1]}%</span>\n      </span>\n    ),\n  },\n  {\n    title: '特性',\n    Content: ({ pm }: ContentProps) => (\n      <span className=\"flex flex-wrap justify-center gap-2 md:justify-start\">\n        {pm.abilities.map((ability) => (\n          <span\n            key={ability}\n            className={clsx(\n              'py-px',\n              'h-7 w-full md:w-2/5',\n              'border-2 border-solid border-secondary',\n              'rounded-full bg-secondary/30 text-center text-sm text-black',\n              'whitespace-nowrap'\n            )}\n          >\n            {ability}\n          </span>\n        ))}\n      </span>\n    ),\n  },\n  {\n    title: '隱藏特性',\n    Content: ({ pm }: ContentProps) => (\n      <span className=\"flex flex-wrap justify-center gap-2 md:justify-start\">\n        <span\n          className={clsx(\n            'py-px',\n            'h-7 w-full md:w-2/5',\n            'border-2 border-solid border-scarlet',\n            'rounded-full bg-scarlet/30 text-center text-sm text-black',\n            'whitespace-nowrap'\n          )}\n        >\n          {pm.hiddenAbility}\n        </span>\n      </span>\n    ),\n  },\n  {\n    title: '蛋群',\n    Content: ({ pm }: ContentProps) => (\n      <span className=\"flex gap-2\">\n        {pm.eggGroups.map((egg) => (\n          <span\n            key={egg}\n            className={clsx(\n              'py-px',\n              'h-7 w-1/2 md:w-2/5',\n              'border-2 border-solid border-secondary',\n              'rounded-full bg-secondary/30 text-center text-sm text-black',\n              'whitespace-nowrap'\n            )}\n          >\n            {egg}\n          </span>\n        ))}\n      </span>\n    ),\n  },\n];\n\nexport function BaseInfo({ pm }: Props) {\n  return (\n    <>\n      <TitleSlide title=\"基本資訊\" />\n      <ul className=\"grid grid-cols-2 gap-x-2 gap-y-4 md:gap-y-6\">\n        {renderData.map((data, index) => (\n          <li\n            className={clsx('flex flex-col items-start', 'gap-1', 'md:flex-row md:text-left')}\n            key={index}\n          >\n            <span\n              className={clsx(\n                'md:py-px',\n                'pr-3 md:w-2/5 md:pr-0',\n                'border-b-[1px] border-solid border-custom-gold md:border-2',\n                'text-start text-sm text-black md:rounded-full md:text-center',\n                'whitespace-nowrap'\n              )}\n            >\n              {data.title}\n            </span>\n            <p className=\"w-full\">\n              <data.Content pm={pm} />\n            </p>\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n}\n","import { useParams, useNavigate } from 'react-router-dom';\n\nimport { SubTitleSlide } from '@/newComponents';\nimport { usePokemonListContext } from '@/newComponents/contexts';\nimport { usePokemonInfo } from './api';\nimport { BaseInfo, Header } from './components';\n\nfunction PokemonInfo() {\n  const navigate = useNavigate();\n  const { nameId = '噴火龍' } = useParams();\n  const [name, altForm] = nameId.split('-');\n  const { pokemonList } = usePokemonListContext();\n\n  let { link } = pokemonList.find(\n    (pm) => pm.nameZh === name && (altForm !== undefined ? pm.altForm === altForm : true)\n  ) || { link: undefined };\n\n  if (link === undefined) {\n    ({ link } = pokemonList.find((pm) => pm.link === nameId) || { link: undefined });\n  }\n\n  if (link === undefined) {\n    link = '4';\n  }\n\n  const { data: pm, status } = usePokemonInfo(link);\n\n  if (pokemonList.length === 0 || status !== 'success') {\n    return <></>;\n  }\n\n  return (\n    <div className=\"-mt-4 flex flex-col gap-2\">\n      <Header pm={pm} />\n      <h2 className=\"text-2xl\">\n        #{pm.pid.toString().padStart(4, '0')} {pm.nameZh}\n        {pm.altForm && <span className=\"text-sm\">({pm.altForm})</span>}\n        <a\n          href={`https://wiki.52poke.com/zh-hant/${pm.nameZh}`}\n          target=\"_blank\"\n          rel=\"noreferrer\"\n          className=\"ml-2 text-lg font-bold text-blue-800 underline\"\n        >\n          wiki\n        </a>\n      </h2>\n      <BaseInfo pm={pm} />\n\n      <SubTitleSlide title=\"進化\" />\n      <details open>\n        <summary>進化</summary>\n        <pre>{JSON.stringify(pm.evolves, null, 2)}</pre>\n      </details>\n\n      <SubTitleSlide title=\"招式\" />\n      <details>\n        <summary>招式</summary>\n        <pre>{JSON.stringify(pm.moves, null, 2)}</pre>\n      </details>\n\n      <button onClick={() => navigate(-1)}>back</button>\n    </div>\n  );\n}\n\nexport default PokemonInfo;\n","import { useQuery } from '@tanstack/react-query';\nimport { api } from '@/utils';\nimport { FullPokemon } from '@/types/Pokemon';\n\nexport const usePokemonInfo = (link: string = '906') => {\n  const { data, status, ...rest } = useQuery<FullPokemon>([`pokemon:${link}`], () =>\n    api<FullPokemon>(`/data/pm/${link}.json`)\n  );\n\n  return {\n    status,\n    data: data as FullPokemon,\n    ...rest,\n  };\n};\n"],"names":["Header","pm","className","clsx","BgFromType","types","BgToType","length","genderRatioMap","renderData","title","Content","nameEn","nameJp","map","type","BgType","genderRatio","abilities","ability","hiddenAbility","eggGroups","egg","BaseInfo","data","index","navigate","useNavigate","useParams","nameId","split","name","altForm","pokemonList","usePokemonListContext","find","nameZh","undefined","link","useQuery","api","status","rest","usePokemonInfo","pid","toString","padStart","href","target","rel","open","JSON","stringify","evolves","moves","onClick"],"sourceRoot":""}