{"version":3,"file":"static/js/Pokedex.aff3fb1e.chunk.js","mappings":"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","sources":["pages/Pokedex/components/Card.tsx","pages/Pokedex/components/SearchBar.tsx","pages/Pokedex/components/Pagination.tsx","pages/Pokedex/components/Filter.tsx","pages/Pokedex/components/Buttons.tsx","pages/Pokedex/components/Header.tsx","pages/Pokedex/UseFilter.ts","pages/Pokedex/Pokedex.tsx"],"sourcesContent":["import { Link } from 'react-router-dom';\nimport clsx from 'clsx';\n\nimport { Icon } from '@/newComponents';\nimport { EVIndex, EVName, PokedexFrom, PokedexList, Pokemon } from '@/types/Pokemon';\n\nimport { Display, Filter } from '../Pokedex';\n\ntype Props = {\n  pokemon: Pokemon;\n  filter: Filter;\n  display: Display;\n};\n\nconst Abilities = ({ pokemon }: { pokemon: Pokemon }) => {\n  return (\n    <>\n      {pokemon.abilities.map((ability) => (\n        <span\n          key={ability}\n          className=\"rounded bg-blue-100 px-1.5 py-0.5 text-center text-xs font-semibold text-blue-800\"\n        >\n          {ability}\n        </span>\n      ))}\n      {pokemon.hiddenAbility && (\n        <span className=\"rounded bg-gray-100 px-1.5 py-0.5 text-center text-xs font-semibold text-gray-800\">\n          {[pokemon.hiddenAbility]}\n        </span>\n      )}\n    </>\n  );\n};\n\nconst EVs = ({ pokemon }: { pokemon: Pokemon }) => {\n  return (\n    <>\n      {Array(6)\n        .fill(0)\n        .map((_, i) => ({\n          key: EVName[EVIndex[String(i) as keyof typeof EVIndex] as unknown as keyof typeof EVName],\n          val: pokemon.EVs[i],\n        }))\n        .filter((item) => item.val > 0)\n        .map((item) => `${item.key}: ${item.val}`)\n        .map((t) => (\n          <span\n            key={t}\n            className=\"rounded bg-blue-100 px-1.5 py-0.5 text-center text-xs font-semibold text-blue-800\"\n          >\n            {t}\n          </span>\n        ))}\n    </>\n  );\n};\n\nconst Pids = ({ pokemon, pokedex }: { pokemon: Pokemon; pokedex: string }) => {\n  return (\n    <>\n      {pokemon.paldea && pokedex !== 'paldea' && (\n        <span className=\"rounded bg-custom-gold/30 px-1.5 py-0.5 text-center text-xs font-semibold text-gray-800\">\n          帕底亞#{pokemon.paldea.toString().padStart(3, '0')}\n        </span>\n      )}\n      {pokemon.kitakami && pokedex !== 'kitakami' && (\n        <span className=\"rounded bg-custom-green/30 px-1.5 py-0.5 text-center text-xs font-semibold text-gray-800\">\n          北上#{pokemon.kitakami.toString().padStart(3, '0')}\n        </span>\n      )}\n      {pokemon.blueberry && pokedex !== 'blueberry' && (\n        <span className=\"rounded bg-custom-blue/30 px-1.5 py-0.5 text-center text-xs font-semibold text-gray-800\">\n          藍莓#{pokemon.blueberry.toString().padStart(3, '0')}\n        </span>\n      )}\n      {pokemon.pid && pokedex !== 'national' && (\n        <span className=\"rounded bg-custom-orange/30 px-1.5 py-0.5 text-center text-xs font-semibold text-gray-800\">\n          全國#{pokemon.pid.toString().padStart(3, '0')}\n        </span>\n      )}\n    </>\n  );\n};\n\nexport function Card({ pokemon, filter, display }: Props) {\n  const pid = PokedexList.includes(filter.pokedex)\n    ? (pokemon[filter.pokedex as PokedexFrom] || 0).toString().padStart(3, '0')\n    : pokemon.pid.toString().padStart(4, '0');\n\n  return (\n    <div\n      className={clsx(\n        'mt-8 px-4 pb-0 pt-2 md:mt-20 md:pb-2',\n        'flex flex-col gap-y-2',\n        'rounded-xl bg-white',\n        'shadow-list-items hover:shadow-list-items--hover',\n        'hover:translate-x-[-0.2rem] hover:translate-y-[-0.2rem]',\n        'relative'\n      )}\n    >\n      <header className={'relative h-6 md:h-auto'}>\n        <span className=\"hidden whitespace-nowrap md:block\">#{pid}</span>\n        <Icon.Game.PmIcon pm={pokemon} className=\"absolute bottom-0 md:-right-8\" />\n      </header>\n      <hr className=\"border-0 border-t-[1px] border-[#A29834]\" />\n      <div className=\"flex h-full flex-col justify-between gap-y-1\">\n        <div className={clsx('grid grid-cols-1 md:grid-cols-2')}>\n          <div className=\"flex flex-col items-center gap-y-1 md:items-start\">\n            <p className=\"text-center md:text-start\">\n              <span className=\"block whitespace-nowrap md:hidden\">#{pid}</span>\n              {pokemon.nameZh}\n              {pokemon.altForm && (\n                <span className=\"block text-xs font-thin\">({pokemon.altForm})</span>\n              )}\n            </p>\n            <div className=\"flex gap-x-1\">\n              {pokemon.types.map((type) => (\n                <Icon.Game.Type type={type} key={type} />\n              ))}\n            </div>\n          </div>\n          <div className=\"hidden md:block\">\n            <div className=\"flex flex-col gap-y-2\">\n              <Abilities pokemon={pokemon} />\n            </div>\n          </div>\n        </div>\n        <div\n          className={clsx(\n            'mt-2',\n            display.EVs || display.ability || display.pid ? 'block' : 'hidden'\n          )}\n        >\n          {display.ability && (\n            <p className=\"flex flex-col flex-wrap justify-center gap-2 whitespace-nowrap md:flex-row md:justify-start\">\n              <Abilities pokemon={pokemon} />\n            </p>\n          )}\n          {display.EVs && (\n            <p className=\"flex flex-col flex-wrap justify-center gap-2 whitespace-nowrap md:flex-row md:justify-start\">\n              <EVs pokemon={pokemon} />\n            </p>\n          )}\n          {display.pid && (\n            <p className=\"flex flex-col flex-wrap justify-center gap-2 whitespace-nowrap md:flex-row md:justify-start\">\n              <Pids pokemon={pokemon} pokedex={filter.pokedex} />\n            </p>\n          )}\n        </div>\n      </div>\n      <Link\n        className={'stretchedLink'}\n        to={`/pokedex/${pokemon.nameZh}${pokemon.altForm ? '-' + pokemon.altForm : ''}`}\n      />\n    </div>\n  );\n}\n","import clsx from 'clsx';\n\nimport { Indicator } from '@/newComponents/common';\nimport { Icon } from '@/newComponents';\nimport { BoolKeys } from '@/utils';\n\nimport { FilterButton } from '.';\nimport { Display } from '../Pokedex';\n\ntype Props = {\n  value: string;\n  onChange: (val: string) => void;\n\n  display: Display;\n  toggleDisplay: (key: BoolKeys<Display>[keyof Display]) => (bool: boolean) => void;\n\n  hasFilter: Boolean;\n};\n\nexport function SearchBar({ value, onChange, display, toggleDisplay, hasFilter }: Props) {\n  return (\n    <>\n      <div className=\"relative my-2 w-full\">\n        <div className=\"pointer-events-none absolute inset-y-0 left-0 flex items-center pl-3\">\n          <Icon.Search className=\"h-5 w-5\" />\n        </div>\n        <input\n          type=\"search\"\n          className={clsx(\n            'block w-full rounded-full border border-gray-300',\n            'bg-gray-50 p-2 pl-10 text-sm text-gray-900',\n            'search'\n          )}\n          placeholder=\"搜尋 名稱(中/英/日), 樣子\"\n          value={value}\n          onChange={(e) => {\n            onChange(e.target.value);\n          }}\n        />\n        <div className=\"absolute inset-y-0 right-0 flex items-center pr-3\">\n          <FilterButton\n            checked={display.advancedFilter}\n            toggleState={toggleDisplay('advancedFilter')}\n          />\n          {hasFilter && (\n            <div className=\"relative -top-3 right-6\">\n              <Indicator />\n            </div>\n          )}\n        </div>\n      </div>\n    </>\n  );\n}\n","import clsx from 'clsx';\n\nimport { Icon } from '@/newComponents';\nimport { ValueKeys } from '@/utils';\nimport { Filter } from '../Pokedex';\n\ntype Props = {\n  currentPage: number;\n  totalPages: number;\n  updateNumberState: (\n    key: ValueKeys<Filter, number>[keyof Filter],\n    fn: (val: number) => number\n  ) => void;\n};\n\nconst pagingButtonLength = window.screen.width < 768 ? 1 : 5;\n\nexport function Pagination({ currentPage, totalPages, updateNumberState }: Props) {\n  return (\n    <nav>\n      <ul className=\"inline-flex -space-x-px text-sm\">\n        <li>\n          <button\n            onClick={() => updateNumberState('page', (n) => Math.max(1, n - 1))}\n            className={clsx(\n              'ml-0 flex h-8 items-center justify-center',\n              'rounded-l-lg border border-gray-300',\n              'bg-white px-3 leading-tight text-gray-500',\n              'hover:bg-gray-100 hover:text-gray-700',\n              currentPage === 1 && 'cursor-not-allowed'\n            )}\n          >\n            前一頁\n          </button>\n        </li>\n        {currentPage > pagingButtonLength && (\n          <>\n            <li>\n              <button\n                onClick={() => updateNumberState('page', () => 1)}\n                className={clsx(\n                  'ml-0 flex h-8 items-center justify-center',\n                  'border border-gray-300',\n                  'bg-white px-3 leading-tight text-gray-500',\n                  'hover:bg-gray-100 hover:text-gray-700'\n                )}\n              >\n                1\n              </button>\n            </li>\n            <li\n              className={clsx(\n                'ml-0 flex h-8 items-center justify-center',\n                'border border-gray-300',\n                'bg-white px-3 leading-tight text-gray-500'\n              )}\n            >\n              ...\n            </li>\n          </>\n        )}\n        {new Array(totalPages)\n          .fill(0)\n          .map((_, i) => i + 1)\n          .filter((n) => {\n            return Math.abs(n - currentPage) < pagingButtonLength;\n          })\n          .map((n) => (\n            <li key={n}>\n              <button\n                onClick={() => updateNumberState('page', () => n)}\n                className={clsx(\n                  'ml-0 flex h-8 items-center justify-center',\n                  'border border-gray-300',\n                  'px-3 leading-tight',\n                  'hover:bg-gray-100 hover:text-gray-700',\n                  n === currentPage ? 'bg-gray-100 text-gray-700' : 'bg-white text-gray-500'\n                )}\n              >\n                {n}\n              </button>\n            </li>\n          ))}\n        {totalPages - currentPage >= pagingButtonLength && (\n          <>\n            <li\n              className={clsx(\n                'ml-0 flex h-8 items-center justify-center',\n                'border border-gray-300',\n                'bg-white px-3 leading-tight text-gray-500'\n              )}\n            >\n              ...\n            </li>\n            <li>\n              <button\n                onClick={() => updateNumberState('page', () => totalPages)}\n                className={clsx(\n                  'ml-0 flex h-8 items-center justify-center',\n                  'border border-gray-300',\n                  'bg-white px-3 leading-tight text-gray-500',\n                  'hover:bg-gray-100 hover:text-gray-700'\n                )}\n              >\n                {totalPages}\n              </button>\n            </li>\n          </>\n        )}\n        <li>\n          <button\n            onClick={() => {\n              updateNumberState('page', (n) => {\n                return Math.min(totalPages, n + 1);\n              });\n            }}\n            className={clsx(\n              'ml-0 flex h-8 items-center justify-center',\n              'rounded-r-lg border border-gray-300',\n              'bg-white px-3 leading-tight text-gray-500',\n              'hover:bg-gray-100 hover:text-gray-700',\n              currentPage === totalPages && 'cursor-not-allowed'\n            )}\n          >\n            後一頁\n          </button>\n        </li>\n      </ul>\n    </nav>\n  );\n}\n\nexport function PaginationMobile({\n  currentPage,\n  totalPages,\n  updateNumberState,\n  length,\n}: Props & { length: number }) {\n  return (\n    <>\n      <button onClick={() => updateNumberState('page', (n) => Math.max(1, n - 1))}>\n        <Icon.ArrowBack className={clsx(currentPage === 1 ? 'fill-gray-400' : 'fill-white')} />\n      </button>\n      <p>\n        第{currentPage}頁，共{totalPages}頁 ｜ {length}種符合\n      </p>\n      <button onClick={() => updateNumberState('page', (n) => Math.min(totalPages, n + 1))}>\n        <Icon.ArrowForward\n          className={clsx(currentPage === totalPages ? 'fill-gray-400' : 'fill-white')}\n        />\n      </button>\n    </>\n  );\n}\n","import { ChangeEvent } from 'react';\n\nimport { Icon } from '@/newComponents';\n\ntype Props = {\n  checked: boolean;\n  toggleState: (bool: boolean) => void;\n};\n\nexport function FilterButton({ checked, toggleState }: Props) {\n  return (\n    <>\n      <input\n        type=\"checkbox\"\n        name={'filter'}\n        id={'filter'}\n        className=\"hidden\"\n        checked={checked}\n        onChange={(event: ChangeEvent<HTMLInputElement>) => {\n          toggleState(event.target.checked);\n        }}\n      />\n      <label htmlFor={'filter'} className=\"flex cursor-pointer flex-col items-center\">\n        <Icon.Filter className=\"h-6 w-6\" />\n      </label>\n    </>\n  );\n}\n","import clsx from 'clsx';\n\ntype Props = {\n  list: { name: string; val: string }[];\n  currVal: string | Set<string>;\n  updateState: (val: string) => void;\n};\n\nexport function Buttons({ list, currVal, updateState }: Props) {\n  return (\n    <div className=\"flex flex-wrap gap-4\">\n      {list.map((item) => {\n        return (\n          <button\n            key={item.name}\n            className={clsx(\n              'rounded-xl px-2 py-1',\n              'whitespace-nowrap shadow-list-items',\n              typeof currVal === 'string'\n                ? currVal === item.val\n                  ? 'bg-secondary'\n                  : 'bg-secondary/40'\n                : currVal.has(item.val)\n                ? 'bg-secondary'\n                : 'bg-secondary/40'\n            )}\n            onClick={() => {\n              updateState(item.val);\n            }}\n          >\n            {item.name}\n          </button>\n        );\n      })}\n    </div>\n  );\n}\n","import clsx from 'clsx';\n\nimport { SubTitleSlide, TitleSlide, Toggle } from '@/newComponents/common';\nimport { Icon } from '@/newComponents';\nimport { EVName, TypeEnum } from '@/types/Pokemon';\nimport { BoolKeys, ValueKeys } from '@/utils';\n\nimport { Filter, Display } from '../Pokedex';\nimport { SearchBar, Buttons } from '.';\n\ntype Props = {\n  filter: Filter;\n  abilities: string[];\n  updateState: (key: ValueKeys<Filter, string>[keyof Filter]) => (val: string) => void;\n  updateSetState: (key: ValueKeys<Filter, Set<string>>[keyof Filter]) => (val: string) => void;\n\n  display: Display;\n  toggleDisplay: (key: BoolKeys<Display>[keyof Display]) => (bool: boolean) => void;\n};\n\nexport function Header({\n  filter,\n  abilities,\n  updateState,\n  updateSetState,\n  display,\n  toggleDisplay,\n}: Props) {\n  const typeUpdate = updateSetState('types');\n  const abilityUpdate = updateState('ability');\n  const showChildUpdate = updateState('onlyEvolution');\n\n  const hasFilter = [filter.ability, filter.EV].filter(Boolean).length > 0;\n\n  const filterList = [\n    { value: filter.ability, name: '特性', key: 'ability' },\n    { value: EVName[filter.EV as keyof typeof EVName] || '', name: '努力值', key: 'EV' },\n  ];\n\n  return (\n    <header>\n      <div className=\"flex flex-col justify-between gap-x-2 md:flex-row md:items-center\">\n        <div className=\"flex items-center gap-2\">\n          <div className={clsx('rounded-xl p-2', 'bg-custom-red', 'hidden md:block')}>\n            <Icon.Books className=\"h-5 w-5 fill-current\" />\n          </div>\n          <h2 className=\"text-xl\">圖鑑清單</h2>\n        </div>\n        <div className=\"flex w-full items-center gap-x-3 md:w-96\">\n          <SearchBar\n            value={filter.keyword}\n            onChange={updateState('keyword')}\n            display={display}\n            toggleDisplay={toggleDisplay}\n            hasFilter={hasFilter}\n          />\n        </div>\n      </div>\n      <div className=\"flex flex-col gap-2\">\n        <SubTitleSlide title=\"圖鑑分類\" />\n        <Buttons\n          list={[\n            { name: '全國', val: 'national' },\n            { name: '帕底亞', val: 'paldea' },\n            { name: '北上', val: 'kitakami' },\n            { name: '藍莓', val: 'blueberry' },\n            { name: '洗翠', val: 'hisui' },\n            { name: 'HOME / 活動 / 點心', val: 'home' },\n          ]}\n          currVal={filter.pokedex}\n          updateState={updateState('pokedex')}\n        />\n        <div className=\"flex gap-x-2\">\n          <Toggle\n            text=\"顯示其餘圖鑑編號\"\n            checked={display.pid}\n            handleChange={toggleDisplay('pid')}\n          />\n          <Toggle\n            text=\"僅顯示進化型\"\n            checked={filter.onlyEvolution === 'yes'}\n            handleChange={(bool) => showChildUpdate(bool ? 'yes' : '')}\n          />\n        </div>\n        <SubTitleSlide title=\"屬性\" />\n        <div className=\"flex w-full flex-wrap justify-items-center gap-x-4 gap-y-3 pl-2\">\n          {Object.keys(TypeEnum).map((type) => (\n            <button onClick={() => typeUpdate(type)} key={type}>\n              <Icon.Game.Type\n                type={type}\n                className={clsx(\n                  'h-8 w-8',\n                  filter.types.size > 0 && !filter.types.has(type) && 'opacity-30'\n                )}\n              />\n            </button>\n          ))}\n        </div>\n        <SubTitleSlide title=\"標籤(複選，交集)\" />\n        <Buttons\n          list={[\n            { name: '傳說與幻獸', val: '傳說與幻獸' },\n            { name: '悖謬寶可夢', val: '悖謬寶可夢' },\n            { name: '准傳說的寶可夢', val: '准傳說的寶可夢' },\n            { name: '朱版限定', val: '朱版限定' },\n            { name: '紫版限定', val: '紫版限定' },\n          ]}\n          currVal={filter.tags}\n          updateState={updateSetState('tags')}\n        />\n      </div>\n      <div className={clsx('mt-4 flex-col gap-2', display.advancedFilter ? 'flex' : 'hidden')}>\n        <TitleSlide title=\"進階搜尋\" />\n        <SubTitleSlide title=\"特性\" />\n        <div className=\"block md:hidden\">\n          <Toggle\n            text=\"顯示特性\"\n            checked={display.ability}\n            handleChange={toggleDisplay('ability')}\n          />\n        </div>\n        <div className=\"relative mb-2 w-60\">\n          <div className=\"pointer-events-none absolute inset-y-0 left-0 flex items-center pl-3\">\n            <Icon.Search className=\"h-5 w-5\" />\n          </div>\n          <input\n            type=\"search\"\n            className={clsx(\n              'block w-full rounded-lg border border-gray-300',\n              'bg-gray-50 p-2 pl-10 text-sm text-gray-900'\n            )}\n            placeholder=\"搜尋特性\"\n            value={filter.ability}\n            onChange={(e) => {\n              abilityUpdate(e.target.value);\n            }}\n          />\n        </div>\n        <Buttons\n          list={abilities\n            .filter((ability) => {\n              return ability.split('').some((char) => filter.ability.includes(char));\n            })\n            .map((ability) => ({ name: ability, val: ability }))}\n          currVal={filter.ability}\n          updateState={abilityUpdate}\n        />\n        <SubTitleSlide title=\"努力值\" />\n        <span className=\"text-sm\">(篩選單獨只有這此項的清單)</span>\n        <Buttons\n          list={[\n            { name: 'HP', val: 'HP' },\n            { name: '攻擊', val: 'Atk' },\n            { name: '防禦', val: 'Def' },\n            { name: '特攻', val: 'SpA' },\n            { name: '特防', val: 'SpD' },\n            { name: '速度', val: 'Spe' },\n          ]}\n          currVal={filter.EV}\n          updateState={updateState('EV')}\n        />\n        <Toggle text=\"顯示努力值\" checked={display.EVs} handleChange={toggleDisplay('EVs')} />\n      </div>\n      <div\n        className={clsx(\n          'flex-col gap-2',\n          display.advancedFilter === false && hasFilter ? 'flex' : 'hidden'\n        )}\n      >\n        <SubTitleSlide title=\"進階篩選項目：\" />\n        <div className=\"flex flex-wrap gap-4\">\n          {filterList\n            .filter(({ value }) => value !== '')\n            .map(({ value, name, key }) => (\n              <span\n                key={key}\n                className={clsx(\n                  'flex items-center gap-x-2',\n                  'rounded-xl bg-amber-100 px-2 py-1 shadow-list-items'\n                )}\n              >\n                {name}：{value}\n                <Icon.Close\n                  className=\"h-3 w-3 cursor-pointer\"\n                  onClick={() => {\n                    updateState(key as Parameters<typeof updateState>[0])('');\n                  }}\n                />\n              </span>\n            ))}\n        </div>\n      </div>\n    </header>\n  );\n}\n","import { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\n\nimport { BoolKeys, ValueKeys } from '@/utils';\nimport { PokedexFrom } from '@/types/Pokemon';\nimport { getJsonCache } from '@/store';\n\nimport { Filter, Display } from './Pokedex';\n\nconst localStorageKey = 'pokeDexPage';\n\nexport function UseFilter() {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [display, setDisplay] = useState<Display>({\n    advancedFilter: false,\n    EVs: false,\n    ability: false,\n    pid: false,\n  });\n\n  let cacheObj = getJsonCache(localStorageKey);\n\n  const filter: Filter = {\n    keyword: searchParams.get('keyword') || '',\n    pokedex: (searchParams.get('pokedex') || 'national') as PokedexFrom | 'home' | 'national',\n    page: Number(searchParams.get('page') || 1),\n    types: new Set((searchParams.get('types') || '').split('-').filter(Boolean)),\n    ability: searchParams.get('ability') || '',\n    EV: searchParams.get('EV') || '',\n    tags: new Set((searchParams.get('tags') || '').split('-').filter(Boolean)),\n    onlyEvolution: searchParams.get('onlyEvolution') || '',\n  };\n\n  const updateState = (key: ValueKeys<Filter, string>[keyof Filter]) => {\n    return (val: string) => {\n      if (val === '') {\n        setSearchParams((prev) => {\n          prev.delete(key);\n          delete cacheObj[key as keyof typeof cacheObj];\n\n          localStorage.setItem(localStorageKey, JSON.stringify(cacheObj));\n          return prev;\n        });\n      } else {\n        setSearchParams((prev) => {\n          if (prev.has(key) && prev.get(key) === val) {\n            prev.delete(key);\n            delete cacheObj[key as keyof typeof cacheObj];\n          } else {\n            prev.set(key, val);\n            cacheObj[key as keyof typeof cacheObj] = val;\n          }\n          prev.delete('page');\n          delete cacheObj['page'];\n\n          localStorage.setItem(localStorageKey, JSON.stringify(cacheObj));\n          return prev;\n        });\n      }\n    };\n  };\n\n  const updateSetState = (key: ValueKeys<Filter, Set<string>>[keyof Filter]) => {\n    return (val: string) => {\n      setSearchParams((prev) => {\n        const vals = new Set((prev.get(key) || '').split('-').filter(Boolean));\n        if (vals.has(val)) {\n          vals.delete(val);\n        } else {\n          vals.add(val);\n        }\n\n        if (vals.size === 0) {\n          prev.delete(key);\n          delete cacheObj[key as keyof typeof cacheObj];\n        } else {\n          prev.set(key, [...vals].join('-'));\n          cacheObj[key as keyof typeof cacheObj] = [...vals].join('-');\n        }\n\n        prev.delete('page');\n        delete cacheObj['page'];\n\n        localStorage.setItem(localStorageKey, JSON.stringify(cacheObj));\n        return prev;\n      });\n    };\n  };\n\n  const updateNumberState = (\n    key: ValueKeys<Filter, number>[keyof Filter],\n    fn: (val: number) => number\n  ) => {\n    setSearchParams((prev) => {\n      const val = prev.get(key) || '1';\n      const newVal = fn(Number(val));\n      prev.set(key, String(newVal));\n\n      return prev;\n    });\n  };\n\n  const toggleDisplay = (key: BoolKeys<Display>[keyof Display]) => {\n    return (bool: boolean) => {\n      setDisplay((prev) => {\n        const newDisplay = {\n          ...prev,\n          [key]: bool,\n        };\n        return newDisplay;\n      });\n    };\n  };\n\n  useEffect(() => {\n    const cacheObj: Record<string, string> = {};\n    searchParams.forEach((val, key) => {\n      cacheObj[key] = val;\n    });\n\n    if (Object.keys(cacheObj).length > 0) {\n      localStorage.setItem(localStorageKey, JSON.stringify(cacheObj));\n    }\n  }, [searchParams]);\n\n  return {\n    filter,\n    updateState,\n    updateNumberState,\n    updateSetState,\n\n    display,\n    toggleDisplay,\n  };\n}\n","import clsx from 'clsx';\n\nimport { PokedexFrom } from '@/types/Pokemon';\nimport { Hr, Loading } from '@/newComponents/common';\nimport { usePokemonListContext } from '@/newComponents/contexts';\nimport { Card, Pagination, PaginationMobile, Header } from './components';\nimport { UseFilter } from './UseFilter';\nimport { useEffect } from 'react';\nimport { filterPokemonList } from '@/store';\n\nexport type Filter = {\n  keyword: string;\n  pokedex: PokedexFrom | 'home' | 'national';\n  page: number;\n  types: Set<string>;\n  ability: string;\n  EV: string;\n  tags: Set<string>;\n  onlyEvolution: string;\n};\n\nexport type Display = {\n  advancedFilter: boolean;\n  ability: boolean;\n  EVs: boolean;\n  pid: boolean;\n};\n\nconst itemsPerPage = 30;\n\nfunction Pokedex() {\n  const { filter, updateState, updateNumberState, updateSetState, display, toggleDisplay } =\n    UseFilter();\n\n  let { pokemonList: data } = usePokemonListContext();\n\n  useEffect(() => {\n    document.title = `${filter.pokedex} Pokédex`;\n  }, [filter.pokedex]);\n\n  if (data.length === 0) {\n    return <Loading />;\n  }\n\n  const abilities = [\n    ...new Set(\n      data\n        .map((pm) => pm.abilities.concat([pm.hiddenAbility || '']))\n        .flat()\n        .filter(Boolean)\n    ),\n  ].sort();\n\n  data = filterPokemonList(data, filter);\n\n  const totalPages = Math.ceil(data.length / itemsPerPage);\n  const startIndex = (filter.page - 1) * itemsPerPage;\n  const currentData = data.slice(startIndex, startIndex + itemsPerPage);\n\n  return (\n    <div className=\"mb-4 flex flex-col gap-y-4\">\n      <Header\n        filter={filter}\n        abilities={abilities}\n        updateState={updateState}\n        updateSetState={updateSetState}\n        display={display}\n        toggleDisplay={toggleDisplay}\n      />\n      <Hr />\n      <p className={clsx(data.length > 0 && 'hidden')}>查無符合項目，請調整搜尋項目。</p>\n      {data.length > 0 && (\n        <div className=\"grid grid-cols-list-mobile justify-around gap-4 pt-4 pb-8 md:grid-cols-list\">\n          {currentData.map((pm) => (\n            <Card pokemon={pm} key={pm.link} filter={filter} display={display} />\n          ))}\n        </div>\n      )}\n      <footer className=\"hidden justify-end md:flex\">\n        <Pagination\n          currentPage={filter.page}\n          totalPages={totalPages}\n          updateNumberState={updateNumberState}\n        />\n      </footer>\n      <footer\n        className={clsx(\n          'fixed bottom-0 left-0 right-0 flex h-12 items-center justify-between',\n          'bg-primary/60 px-4 text-white md:hidden'\n        )}\n      >\n        <PaginationMobile\n          currentPage={filter.page}\n          totalPages={totalPages}\n          updateNumberState={updateNumberState}\n          length={data.length}\n        />\n      </footer>\n    </div>\n  );\n}\n\nexport default Pokedex;\n"],"names":["Abilities","pokemon","abilities","map","ability","className","hiddenAbility","EVs","Array","fill","_","i","key","EVName","EVIndex","String","val","filter","item","t","Pids","pokedex","paldea","toString","padStart","kitakami","blueberry","pid","Card","display","PokedexList","includes","clsx","pm","nameZh","altForm","types","type","to","SearchBar","value","onChange","toggleDisplay","hasFilter","placeholder","e","target","FilterButton","checked","advancedFilter","toggleState","pagingButtonLength","window","screen","width","Pagination","currentPage","totalPages","updateNumberState","onClick","n","Math","max","abs","min","PaginationMobile","length","name","id","event","htmlFor","Buttons","list","currVal","updateState","has","Header","updateSetState","typeUpdate","abilityUpdate","showChildUpdate","EV","Boolean","filterList","keyword","title","text","handleChange","onlyEvolution","bool","Object","keys","TypeEnum","size","tags","split","some","char","localStorageKey","useSearchParams","searchParams","setSearchParams","useState","setDisplay","cacheObj","getJsonCache","get","page","Number","Set","useEffect","forEach","localStorage","setItem","JSON","stringify","prev","delete","set","fn","newVal","vals","add","join","UseFilter","data","usePokemonListContext","pokemonList","document","concat","flat","sort","filterPokemonList","ceil","startIndex","currentData","slice","Hr","link"],"sourceRoot":""}