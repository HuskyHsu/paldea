{"version":3,"file":"static/js/Pokemon.19c2af9a.chunk.js","mappings":"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","sources":["pages/Pokemon/components/Header.tsx","pages/Pokemon/components/BaseInfo.tsx","pages/Pokemon/components/RadarChart.tsx","pages/Pokemon/components/Statistic.tsx","pages/Pokemon/Pokemon.tsx","pages/Pokemon/api.ts"],"sourcesContent":["import clsx from 'clsx';\n\nimport { Icon } from '@/newComponents';\nimport { BgFromType, BgToType, FullPokemon } from '@/types/Pokemon';\n\ntype Props = {\n  pm: FullPokemon;\n};\n\nexport function Header({ pm }: Props) {\n  return (\n    <header>\n      <div className=\"relative flex justify-center\">\n        <div className=\"z-10 w-32\">\n          <Icon.Game.PmIcon pm={pm} />\n        </div>\n\n        {/* bg banner */}\n        <div\n          className={clsx(\n            'absolute -inset-x-4 bottom-0 z-0 h-3/5 md:inset-x-0',\n            'md:rounded-2xl',\n            'bg-gradient-to-b',\n            BgFromType[pm.types[0] as keyof typeof BgFromType],\n            BgToType[(pm.types.length > 1 ? pm.types[1] : pm.types[0]) as keyof typeof BgToType]\n          )}\n        />\n      </div>\n    </header>\n  );\n}\n","import clsx from 'clsx';\n\nimport { Icon, TitleSlide } from '@/newComponents';\nimport { BgType, FullPokemon } from '@/types/Pokemon';\n\ntype Props = {\n  pm: FullPokemon;\n};\n\ntype ContentProps = { pm: FullPokemon };\n\ntype Render = {\n  title: string;\n  Content: ({ pm }: ContentProps) => JSX.Element;\n};\n\nconst genderRatioMap = {\n  0: [100, 0],\n  31: [87.5, 12.5],\n  63: [75, 25],\n  127: [50, 50],\n  191: [25, 75],\n  225: [12.5, 87.5],\n  254: [0, 100],\n  255: [0, 0],\n};\n\nconst renderData: Render[] = [\n  {\n    title: '英文名稱',\n    Content: ({ pm }: ContentProps) => <>{pm.nameEn}</>,\n  },\n  {\n    title: '日文名稱',\n    Content: ({ pm }: ContentProps) => <>{pm.nameJp}</>,\n  },\n  {\n    title: '屬性',\n    Content: ({ pm }: ContentProps) => (\n      <span className=\"flex gap-2 text-white\">\n        {pm.types.map((type) => (\n          <span\n            className={clsx(\n              'flex items-center gap-1 rounded-xl pl-2 pr-3 text-sm',\n              BgType[type as keyof typeof BgType]\n            )}\n            key={type}\n          >\n            <Icon.Game.Type type={type} className=\"h-6 w-6\" />\n            {type}\n          </span>\n        ))}\n      </span>\n    ),\n  },\n  {\n    title: '性別比例',\n    Content: ({ pm }: ContentProps) => (\n      <span className=\"flex gap-4 whitespace-nowrap\">\n        <span>♂：{genderRatioMap[pm.genderRatio as keyof typeof genderRatioMap][0]}%</span>\n        <span>♀：{genderRatioMap[pm.genderRatio as keyof typeof genderRatioMap][1]}%</span>\n      </span>\n    ),\n  },\n  {\n    title: '特性',\n    Content: ({ pm }: ContentProps) => (\n      <span className=\"flex flex-wrap justify-center gap-2 md:justify-start\">\n        {pm.abilities.map((ability) => (\n          <span\n            key={ability}\n            className={clsx(\n              'py-px',\n              'h-7 w-full md:w-2/5',\n              'border-2 border-solid border-secondary',\n              'rounded-full bg-secondary/30 text-center text-sm text-black',\n              'whitespace-nowrap'\n            )}\n          >\n            {ability}\n          </span>\n        ))}\n      </span>\n    ),\n  },\n  {\n    title: '隱藏特性',\n    Content: ({ pm }: ContentProps) => {\n      if (pm.hiddenAbility === null) {\n        return <></>;\n      }\n      return (\n        <span className=\"flex flex-wrap justify-center gap-2 md:justify-start\">\n          <span\n            className={clsx(\n              'py-px',\n              'h-7 w-full md:w-2/5',\n              'border-2 border-solid border-scarlet',\n              'rounded-full bg-scarlet/30 text-center text-sm text-black',\n              'whitespace-nowrap'\n            )}\n          >\n            {pm.hiddenAbility}\n          </span>\n        </span>\n      );\n    },\n  },\n  {\n    title: '蛋群',\n    Content: ({ pm }: ContentProps) => (\n      <span className=\"flex gap-2\">\n        {pm.eggGroups.map((egg) => (\n          <span\n            key={egg}\n            className={clsx(\n              'py-px',\n              'h-7 w-1/2 md:w-2/5',\n              'border-2 border-solid border-secondary',\n              'rounded-full bg-secondary/30 text-center text-sm text-black',\n              'whitespace-nowrap'\n            )}\n          >\n            {egg}\n          </span>\n        ))}\n      </span>\n    ),\n  },\n];\n\nexport function BaseInfo({ pm }: Props) {\n  return (\n    <>\n      <TitleSlide title=\"基本資訊\" />\n      <ul className=\"grid grid-cols-2 gap-x-2 gap-y-4 md:gap-y-6\">\n        {renderData.map((data, index) => (\n          <li\n            className={clsx('flex flex-col items-start', 'gap-1', 'md:flex-row md:text-left')}\n            key={index}\n          >\n            <span\n              className={clsx(\n                'md:py-px',\n                'pr-3 md:w-2/5 md:pr-0',\n                'border-b-[1px] border-solid border-custom-gold md:border-2',\n                'text-start text-sm text-black md:rounded-full md:text-center',\n                'whitespace-nowrap'\n              )}\n            >\n              {data.title}\n            </span>\n            <p className=\"w-full\">\n              <data.Content pm={pm} />\n            </p>\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n}\n","import clsx from 'clsx';\n\nconst radius = 100;\nconst center = [radius * 1.5, radius * 1.5];\n\ntype RadarPorps = {\n  stats: number[];\n  color: string;\n  EVs: number[];\n};\n\ntype LinePorps = {\n  deg: number;\n};\n\ntype TextPorps = {\n  deg?: number;\n  text?: string;\n  value: number;\n};\n\nconst getPosition = (deg: number, radius: number) => {\n  const radians = (deg * 2 * Math.PI) / 360;\n  return [center[0] + radius * Math.cos(radians), center[1] + radius * Math.sin(radians)];\n};\n\nconst Line = ({ deg }: LinePorps) => {\n  const point1 = getPosition(deg, radius);\n  const point2 = getPosition(deg + 180, radius);\n\n  return (\n    <line\n      x1={point1[0]}\n      y1={point1[1]}\n      x2={point2[0]}\n      y2={point2[1]}\n      stroke=\"#FFFFFF\"\n      strokeWidth=\"2\"\n    />\n  );\n};\n\nconst Text = ({ deg, text, value }: TextPorps) => {\n  const point = getPosition(deg as number, radius * 1.25);\n  const color = (text?.length ?? 0) > 2 ? 'fill-red-600 stroke-1 stroke-red-600' : 'fill-slate-600';\n\n  return (\n    <>\n      <text\n        x={point[0]}\n        y={point[1] - 5}\n        fontSize=\"1.1em\"\n        textAnchor=\"middle\"\n        className={clsx(color)}\n      >\n        {text}\n      </text>\n      <text\n        x={point[0]}\n        y={point[1] + 15}\n        fontSize=\"1.1em\"\n        textAnchor=\"middle\"\n        className={clsx(color)}\n      >\n        {value}\n      </text>\n    </>\n  );\n};\n\nconst TotalText = ({ value }: TextPorps) => {\n  const point = getPosition(0, 0);\n\n  return (\n    <>\n      <text x={point[0]} y={point[1] + 10} fontSize=\"1.5em\" textAnchor=\"middle\" fill=\"#f3f4f6\">\n        {value}\n      </text>\n    </>\n  );\n};\n\nexport function RadarChart({\n  stats: [hp, atk, def, spAtk, spDef, speed],\n  color = '#339DDF',\n  EVs: [ev_hp, ev_atk, ev_def, ev_spAtk, ev_spDef, ev_speed],\n}: RadarPorps) {\n  const total = hp + atk + def + spAtk + spDef + speed;\n\n  const bgPoints = Array.from(Array(6).keys())\n    .map((_, i) => 30 + i * 60)\n    .map((deg) => getPosition(deg, radius));\n\n  const speciesStrength = [\n    getPosition(270, (hp * radius) / 255),\n    getPosition(330, (atk * radius) / 165),\n    getPosition(30, (def * radius) / 184),\n    getPosition(90, (speed * radius) / 200),\n    getPosition(150, (spDef * radius) / 154),\n    getPosition(210, (spAtk * radius) / 170),\n  ];\n\n  const labels = [\n    { name: 'HP', value: hp, deg: 270, plus: ev_hp },\n    { name: '攻擊', value: atk, deg: 330, plus: ev_atk },\n    { name: '防禦', value: def, deg: 30, plus: ev_def },\n    { name: '速度', value: speed, deg: 90, plus: ev_speed },\n    { name: '特防', value: spDef, deg: 150, plus: ev_spDef },\n    { name: '特攻', value: spAtk, deg: 210, plus: ev_spAtk },\n  ];\n\n  return (\n    <svg className=\"h-auto w-full\" viewBox={`0 0 ${center[0] * 2} ${center[1] * 2}`}>\n      <polygon points={bgPoints.flat().join(', ')} fill=\"#e9e9e9\" />\n      <g>\n        <Line deg={-30} />\n        <Line deg={30} />\n        <Line deg={90} />\n      </g>\n      <polygon points={speciesStrength.flat().join(', ')} className={color} fillOpacity=\"0.6\" />\n      <g>\n        {labels.map((label) => (\n          <Text\n            key={label.deg}\n            text={label.name + (label.plus > 0 ? `+${label.plus}` : '')}\n            value={label.value}\n            deg={label.deg}\n          />\n        ))}\n        <TotalText text={'total'} value={total} />\n      </g>\n    </svg>\n  );\n}\n","import { useState } from 'react';\nimport clsx from 'clsx';\n\nimport { RadarChart } from './RadarChart';\nimport { FillType, FullPokemon } from '@/types/Pokemon';\nimport { TitleSlide } from '@/newComponents';\n\ntype Props = {\n  pokemon: FullPokemon;\n};\n\nfunction calStatistic(\n  species: number,\n  individual: number,\n  base: number,\n  lv: number,\n  isHp = false,\n  nature?: string\n) {\n  if (isHp) {\n    return Math.floor((Math.floor(species * 2 + individual + base / 4) * lv) / 100 + 10 + lv);\n  }\n  const value = (Math.floor(species * 2 + individual + base / 4) * lv) / 100 + 5;\n  if (nature === undefined) {\n    return Math.floor(value);\n  }\n  return nature === 'up' ? Math.floor(value * 1.1) : Math.floor(value * 0.9);\n}\n\nexport function Statistic({ pokemon }: Props) {\n  const [lv, setLv] = useState(75);\n\n  const cases = [\n    { name: '最高', individual: 31, base: 252, nature: 'up' },\n    { name: '標準', individual: 31, base: 252, nature: undefined },\n    { name: '上升', individual: 31, base: 0, nature: 'up' },\n    { name: '初始', individual: 31, base: 0, nature: undefined },\n    { name: '下降', individual: 31, base: 0, nature: 'down' },\n    { name: '最低', individual: 0, base: 0, nature: 'down' },\n  ];\n\n  return (\n    <>\n      <TitleSlide title=\"能力值\" />\n      <div className=\"grid grid-cols-12 gap-3\">\n        <div className=\"col-span-full flex justify-center md:col-span-5\">\n          <div className=\"w-10/12 md:w-full\">\n            <RadarChart\n              stats={pokemon.baseStats}\n              EVs={pokemon.EVs}\n              color={FillType[pokemon.types[0] as keyof typeof FillType]}\n            />\n          </div>\n        </div>\n        <div className=\"col-span-12 space-y-3 md:col-span-7\">\n          <label className=\"block font-medium text-gray-600\">Lv： {lv}</label>\n          <input\n            type=\"range\"\n            value={lv}\n            min=\"1\"\n            max=\"100\"\n            step=\"1\"\n            className=\"h-1 w-full cursor-pointer appearance-none rounded-lg bg-gray-100\"\n            onChange={(e) => setLv(parseInt(e.target.value))}\n          />\n          <table className=\"w-full table-fixed text-center text-sm text-gray-600\">\n            <thead className=\"bg-gray-100 text-xs uppercase text-gray-700\">\n              <tr className=\"bg-custom-gold/50 text-gray-100\">\n                <th scope=\"col\" className=\"whitespace-nowrap py-1\">\n                  情境\n                </th>\n                {['Hp', '攻擊', '防禦', '特攻', '特防', '速度'].map((type) => (\n                  <th scope=\"col\" className=\"whitespace-nowrap py-1\" key={type}>\n                    {type}\n                  </th>\n                ))}\n              </tr>\n            </thead>\n            <tbody>\n              {cases.map((c) => (\n                <tr\n                  className={clsx(\n                    'border-b text-center',\n                    c.name === '初始'\n                      ? 'bg-gray-200 text-gray-600'\n                      : 'hover:bg-gray-200 hover:text-gray-600'\n                  )}\n                  key={c.name}\n                >\n                  <td className=\"py-1\">{c.name}</td>\n                  {pokemon.baseStats.slice(0, 6).map((stat, i) => (\n                    <td className=\"py-1\" key={i}>\n                      {calStatistic(stat, c.individual, c.base, lv, i === 0, c.nature)}\n                    </td>\n                  ))}\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n        <ul className=\"col-span-12 text-center text-sm text-gray-500 md:text-start\">\n          <li className=\"px-2\">最高：個體值最大、努力值滿、性格⇧</li>\n          <li className=\"px-2\">標準：個體值最大、努力值滿、性格－</li>\n          <li className=\"px-2\">上升：個體值最大、無努力值、性格⇧</li>\n          <li>\n            <span className=\"bg-gray-200 px-2 text-gray-600\">\n              初始：個體值最大、無努力值、性格－\n            </span>\n          </li>\n          <li className=\"px-2\">下降：個體值最大、無努力值、性格⇩</li>\n          <li className=\"px-2\">最低：個體值最低、無努力值、性格⇩</li>\n        </ul>\n      </div>\n    </>\n  );\n}\n","import { useParams, useNavigate } from 'react-router-dom';\n\nimport { SubTitleSlide } from '@/newComponents';\nimport { usePokemonListContext } from '@/newComponents/contexts';\nimport { usePokemonInfo } from './api';\nimport { BaseInfo, Header, Statistic } from './components';\n\nfunction PokemonInfo() {\n  const navigate = useNavigate();\n  const { nameId = '噴火龍' } = useParams();\n  const [name, altForm] = nameId.split('-');\n  const { pokemonList } = usePokemonListContext();\n\n  let { link } = pokemonList.find(\n    (pm) => pm.nameZh === name && (altForm !== undefined ? pm.altForm === altForm : true)\n  ) || { link: undefined };\n\n  if (link === undefined) {\n    ({ link } = pokemonList.find((pm) => pm.link === nameId) || { link: undefined });\n  }\n\n  if (link === undefined) {\n    link = '4';\n  }\n\n  const { data: pm, status } = usePokemonInfo(link);\n\n  if (pokemonList.length === 0 || status !== 'success') {\n    return <></>;\n  }\n\n  return (\n    <div className=\"-mt-4 flex flex-col gap-4\">\n      <Header pm={pm} />\n      <h2 className=\"text-2xl\">\n        #{pm.pid.toString().padStart(4, '0')} {pm.nameZh}\n        {pm.altForm && <span className=\"text-sm\">({pm.altForm})</span>}\n        <a\n          href={`https://wiki.52poke.com/zh-hant/${pm.nameZh}`}\n          target=\"_blank\"\n          rel=\"noreferrer\"\n          className=\"ml-2 font-bold text-blue-800 underline\"\n        >\n          wiki\n        </a>\n      </h2>\n      <BaseInfo pm={pm} />\n\n      <Statistic pokemon={pm} />\n\n      <SubTitleSlide title=\"進化\" />\n      <details open>\n        <summary>進化</summary>\n        <pre>{JSON.stringify(pm.evolves, null, 2)}</pre>\n      </details>\n\n      <SubTitleSlide title=\"招式\" />\n      <details>\n        <summary>招式</summary>\n        <pre>{JSON.stringify(pm.moves, null, 2)}</pre>\n      </details>\n\n      <button onClick={() => navigate(-1)}>back</button>\n    </div>\n  );\n}\n\nexport default PokemonInfo;\n","import { useQuery } from '@tanstack/react-query';\nimport { api } from '@/utils';\nimport { FullPokemon } from '@/types/Pokemon';\n\nexport const usePokemonInfo = (link: string = '906') => {\n  const { data, status, ...rest } = useQuery<FullPokemon>([`pokemon:${link}`], () =>\n    api<FullPokemon>(`/data/pm/${link}.json`)\n  );\n\n  return {\n    status,\n    data: data as FullPokemon,\n    ...rest,\n  };\n};\n"],"names":["Header","pm","className","clsx","BgFromType","types","BgToType","length","genderRatioMap","renderData","title","Content","nameEn","nameJp","map","type","BgType","genderRatio","abilities","ability","hiddenAbility","eggGroups","egg","BaseInfo","data","index","radius","center","getPosition","deg","radians","Math","PI","cos","sin","Line","point1","point2","x1","y1","x2","y2","stroke","strokeWidth","Text","text","value","point","color","x","y","fontSize","textAnchor","TotalText","fill","RadarChart","stats","hp","atk","def","spAtk","spDef","speed","EVs","ev_hp","ev_atk","ev_def","ev_spAtk","ev_spDef","ev_speed","total","bgPoints","Array","from","keys","_","i","speciesStrength","labels","name","plus","viewBox","points","flat","join","fillOpacity","label","calStatistic","species","individual","base","lv","isHp","nature","floor","undefined","Statistic","pokemon","useState","setLv","cases","baseStats","FillType","min","max","step","onChange","e","parseInt","target","scope","c","slice","stat","navigate","useNavigate","useParams","nameId","split","altForm","pokemonList","usePokemonListContext","find","nameZh","link","useQuery","api","status","rest","usePokemonInfo","pid","toString","padStart","href","rel","open","JSON","stringify","evolves","moves","onClick"],"sourceRoot":""}