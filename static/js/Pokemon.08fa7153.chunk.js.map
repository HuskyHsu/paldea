{"version":3,"file":"static/js/Pokemon.08fa7153.chunk.js","mappings":"iQASMA,EAAiB,CACrB,EAAG,CAAC,IAAK,GACT,GAAI,CAAC,KAAM,MACX,GAAI,CAAC,GAAI,IACT,IAAK,CAAC,GAAI,IACV,IAAK,CAAC,GAAI,IACV,IAAK,CAAC,KAAM,MACZ,IAAK,CAAC,EAAG,KACT,IAAK,CAAC,EAAG,IAQLC,EAAuB,CAC3B,CACEC,MAAO,2BACPC,QAAS,gBAAGC,EAAE,EAAFA,GAAE,OAAqB,8BAAGA,EAAGC,QAAU,GAErD,CACEH,MAAO,2BACPC,QAAS,gBAAGC,EAAE,EAAFA,GAAE,OAAqB,8BAAGA,EAAGE,QAAU,GAErD,CACEJ,MAAO,eACPC,QAAS,gBAAGC,EAAE,EAAFA,GAAE,OACZ,iBAAMG,UAAU,wBAAuB,SACpCH,EAAGI,MAAMC,KAAI,SAACC,GAAI,OACjB,kBACEH,WAAWI,EAAAA,EAAAA,GACT,uDACAC,EAAAA,GAAOF,IACP,WAGF,SAAC,UAAc,CAACA,KAAMA,EAAMH,UAAU,YACrCG,IAHIA,EAIA,KAEJ,GAGX,CACER,MAAO,2BACPC,QAAS,gBAAGC,EAAE,EAAFA,GAAE,OACZ,kBAAMG,UAAU,+BAA8B,WAC5C,2CAASP,EAAeI,EAAGS,aAA4C,GAAE,QACzE,2CAASb,EAAeI,EAAGS,aAA4C,GAAE,SACpE,GAGX,CACEX,MAAO,eACPC,QAAS,gBAAGC,EAAE,EAAFA,GAAE,OACZ,iBAAMG,UAAU,uDAAsD,SACnEH,EAAGU,UAAUL,KAAI,SAACM,GAAO,OACxB,iBAEER,WAAWI,EAAAA,EAAAA,GACT,QACA,sBACA,yCACA,8DACA,qBACA,SAEDI,GATIA,EAUA,KAEJ,GAGX,CACEb,MAAO,2BACPC,QAAS,gBAAGC,EAAE,EAAFA,GAAE,OACZ,iBAAMG,UAAU,uDAAsD,UACpE,iBACEA,WAAWI,EAAAA,EAAAA,GACT,QACA,sBACA,uCACA,4DACA,qBACA,SAEDP,EAAGY,iBAED,GAIX,CACEd,MAAO,eACPC,QAAS,gBAAGC,EAAE,EAAFA,GAAE,OACZ,iBAAMG,UAAU,aAAY,SACzBH,EAAGa,UAAUR,KAAI,SAACS,GAAG,OACpB,iBAEEX,WAAWI,EAAAA,EAAAA,GACT,QACA,qBACA,yCACA,8DACA,qBACA,SAEDO,GATIA,EAUA,KAEJ,IAwFb,MAnFA,WACE,IAAkC,GAAXC,EAAAA,EAAAA,MAAjBC,KACN,EC3H4B,WAA2B,IAA1BA,EAAY,uDAAG,MAC5C,GAAkCC,EAAAA,EAAAA,GAAsB,CAAC,WAAD,OAAYD,KAAS,kBAC3EE,EAAAA,EAAAA,GAAG,mBAA0BF,EAAI,SAAQ,IADnCG,EAAI,EAAJA,KAAMC,EAAM,EAANA,OAAWC,GAAI,YAI7B,OAAO,QACLD,OAAAA,EACAD,KAAMA,GACHE,EAEP,CDiH+BC,MADnB,MAAG,MAAK,GACJtB,EAAE,EAARmB,KAAUC,EAAM,EAANA,OACZG,GAAWC,EAAAA,EAAAA,MAEjB,MAAe,YAAXJ,GACK,yBAIP,iBAAKjB,UAAU,4BAA2B,WACxC,6BACE,iBAAKA,UAAU,+BAA8B,WAC3C,gBAAKA,UAAU,YAAW,UACxB,SAAC,UAAgB,CAACH,GAAIA,OAIxB,gBACEG,WAAWI,EAAAA,EAAAA,GACT,sDACA,iBACA,mBACAkB,EAAAA,GAAWzB,EAAGI,MAAM,IACpBsB,EAAAA,GAAU1B,EAAGI,MAAMuB,OAAS,EAAI3B,EAAGI,MAAM,GAAKJ,EAAGI,MAAM,aAK/D,gBAAID,UAAU,WAAU,cACpBH,EAAG4B,IAAIC,WAAWC,SAAS,EAAG,KAAI,IAAG9B,EAAG+B,OACzC/B,EAAGgC,UAAW,kBAAM7B,UAAU,UAAS,cAAGH,EAAGgC,QAAO,QACrD,cACEC,KAAI,0CAAqCjC,EAAG+B,QAC5CG,OAAO,SACPC,IAAI,aACJhC,UAAU,iDAAgD,sBAK9D,SAAC,KAAU,CAACL,MAAM,8BAClB,eAAIK,UAAU,8CAA6C,SACxDN,EAAWQ,KAAI,SAACc,EAAMiB,GAAK,OAC1B,gBACEjC,WAAWI,EAAAA,EAAAA,GAAK,4BAA6B,QAAS,4BAA4B,WAGlF,iBACEJ,WAAWI,EAAAA,EAAAA,GACT,WACA,wBACA,6DACA,+DACA,qBACA,SAEDY,EAAKrB,SAER,cAAGK,UAAU,SAAQ,UACnB,SAACgB,EAAKpB,QAAO,CAACC,GAAIA,QAdfoC,EAgBF,OAIT,SAAC,KAAa,CAACtC,MAAM,kBACrB,qBAASuC,MAAI,aACX,+CACA,yBAAMC,KAAKC,UAAUvC,EAAGwC,QAAS,KAAM,SAGzC,SAAC,KAAa,CAAC1C,MAAM,kBACrB,gCACE,+CACA,yBAAMwC,KAAKC,UAAUvC,EAAGyC,MAAO,KAAM,SAGvC,mBAAQC,QAAS,kBAAMnB,GAAU,EAAE,EAAC,oBAG1C,C","sources":["pages/Pokemon/Pokemon.tsx","pages/Pokemon/api.ts"],"sourcesContent":["import { useParams, useNavigate } from 'react-router-dom';\nimport clsx from 'clsx';\n\nimport { usePokemonInfo } from './api';\nimport { Icon, SubTitleSlide, TitleSlide } from '@/newComponents';\nimport { BgFromType, BgToType, BgType, FullPokemon } from '@/types/Pokemon';\n\ntype ContentProps = { pm: FullPokemon };\n\nconst genderRatioMap = {\n  0: [100, 0],\n  31: [87.5, 12.5],\n  63: [75, 25],\n  127: [50, 50],\n  191: [25, 75],\n  225: [12.5, 87.5],\n  254: [0, 100],\n  255: [0, 0],\n};\n\ntype Render = {\n  title: string;\n  Content: ({ pm }: ContentProps) => JSX.Element;\n};\n\nconst renderData: Render[] = [\n  {\n    title: '英文名稱',\n    Content: ({ pm }: ContentProps) => <>{pm.nameEn}</>,\n  },\n  {\n    title: '日文名稱',\n    Content: ({ pm }: ContentProps) => <>{pm.nameJp}</>,\n  },\n  {\n    title: '屬性',\n    Content: ({ pm }: ContentProps) => (\n      <span className=\"flex gap-2 text-white\">\n        {pm.types.map((type) => (\n          <span\n            className={clsx(\n              'flex items-center gap-1 rounded-xl pl-2 pr-3 text-sm',\n              BgType[type as keyof typeof BgType]\n            )}\n            key={type}\n          >\n            <Icon.Game.Type type={type} className=\"h-6 w-6\" />\n            {type}\n          </span>\n        ))}\n      </span>\n    ),\n  },\n  {\n    title: '性別比例',\n    Content: ({ pm }: ContentProps) => (\n      <span className=\"flex gap-4 whitespace-nowrap\">\n        <span>♂：{genderRatioMap[pm.genderRatio as keyof typeof genderRatioMap][0]}%</span>\n        <span>♀：{genderRatioMap[pm.genderRatio as keyof typeof genderRatioMap][1]}%</span>\n      </span>\n    ),\n  },\n  {\n    title: '特性',\n    Content: ({ pm }: ContentProps) => (\n      <span className=\"flex flex-wrap justify-center gap-2 md:justify-start\">\n        {pm.abilities.map((ability) => (\n          <span\n            key={ability}\n            className={clsx(\n              'py-px',\n              'h-7 w-full md:w-2/5',\n              'border-2 border-solid border-secondary',\n              'rounded-full bg-secondary/30 text-center text-sm text-black',\n              'whitespace-nowrap'\n            )}\n          >\n            {ability}\n          </span>\n        ))}\n      </span>\n    ),\n  },\n  {\n    title: '隱藏特性',\n    Content: ({ pm }: ContentProps) => (\n      <span className=\"flex flex-wrap justify-center gap-2 md:justify-start\">\n        <span\n          className={clsx(\n            'py-px',\n            'h-7 w-full md:w-2/5',\n            'border-2 border-solid border-scarlet',\n            'rounded-full bg-scarlet/30 text-center text-sm text-black',\n            'whitespace-nowrap'\n          )}\n        >\n          {pm.hiddenAbility}\n        </span>\n      </span>\n    ),\n  },\n\n  {\n    title: '蛋群',\n    Content: ({ pm }: ContentProps) => (\n      <span className=\"flex gap-2\">\n        {pm.eggGroups.map((egg) => (\n          <span\n            key={egg}\n            className={clsx(\n              'py-px',\n              'h-7 w-1/2 md:w-2/5',\n              'border-2 border-solid border-secondary',\n              'rounded-full bg-secondary/30 text-center text-sm text-black',\n              'whitespace-nowrap'\n            )}\n          >\n            {egg}\n          </span>\n        ))}\n      </span>\n    ),\n  },\n];\n\nfunction PokemonInfo() {\n  let { link = '906' } = useParams();\n  const { data: pm, status } = usePokemonInfo(link);\n  const navigate = useNavigate();\n\n  if (status !== 'success') {\n    return <></>;\n  }\n\n  return (\n    <div className=\"-mt-4 flex flex-col gap-2\">\n      <header>\n        <div className=\"relative flex justify-center\">\n          <div className=\"z-10 w-32\">\n            <Icon.Game.PmIcon pm={pm} />\n          </div>\n\n          {/* bg banner */}\n          <div\n            className={clsx(\n              'absolute -inset-x-4 bottom-0 z-0 h-3/5 md:inset-x-0',\n              'md:rounded-2xl',\n              'bg-gradient-to-b',\n              BgFromType[pm.types[0] as keyof typeof BgFromType],\n              BgToType[(pm.types.length > 1 ? pm.types[1] : pm.types[0]) as keyof typeof BgToType]\n            )}\n          />\n        </div>\n      </header>\n      <h2 className=\"text-2xl\">\n        #{pm.pid.toString().padStart(4, '0')} {pm.nameZh}\n        {pm.altForm && <span className=\"text-sm\">({pm.altForm})</span>}\n        <a\n          href={`https://wiki.52poke.com/zh-hant/${pm.nameZh}`}\n          target=\"_blank\"\n          rel=\"noreferrer\"\n          className=\"ml-2 text-lg font-bold text-blue-800 underline\"\n        >\n          wiki\n        </a>\n      </h2>\n      <TitleSlide title=\"基本資訊\" />\n      <ul className=\"grid grid-cols-2 gap-x-2 gap-y-4 md:gap-y-6\">\n        {renderData.map((data, index) => (\n          <li\n            className={clsx('flex flex-col items-start', 'gap-1', 'md:flex-row md:text-left')}\n            key={index}\n          >\n            <span\n              className={clsx(\n                'md:py-px',\n                'pr-3 md:w-2/5 md:pr-0',\n                'border-b-[1px] border-solid border-custom-gold md:border-2',\n                'text-start text-sm text-black md:rounded-full md:text-center',\n                'whitespace-nowrap'\n              )}\n            >\n              {data.title}\n            </span>\n            <p className=\"w-full\">\n              <data.Content pm={pm} />\n            </p>\n          </li>\n        ))}\n      </ul>\n\n      <SubTitleSlide title=\"進化\" />\n      <details open>\n        <summary>進化</summary>\n        <pre>{JSON.stringify(pm.evolves, null, 2)}</pre>\n      </details>\n\n      <SubTitleSlide title=\"招式\" />\n      <details>\n        <summary>招式</summary>\n        <pre>{JSON.stringify(pm.moves, null, 2)}</pre>\n      </details>\n\n      <button onClick={() => navigate(-1)}>back</button>\n    </div>\n  );\n}\n\nexport default PokemonInfo;\n","import { useQuery } from '@tanstack/react-query';\nimport { api } from '@/utils';\nimport { FullPokemon } from '@/types/Pokemon';\n\nexport const usePokemonInfo = (link: string = '906') => {\n  const { data, status, ...rest } = useQuery<FullPokemon>([`pokemon:${link}`], () =>\n    api<FullPokemon>(`/data/pm/${link}.json`)\n  );\n\n  return {\n    status,\n    data: data as FullPokemon,\n    ...rest,\n  };\n};\n"],"names":["genderRatioMap","renderData","title","Content","pm","nameEn","nameJp","className","types","map","type","clsx","BgType","genderRatio","abilities","ability","hiddenAbility","eggGroups","egg","useParams","link","useQuery","api","data","status","rest","usePokemonInfo","navigate","useNavigate","BgFromType","BgToType","length","pid","toString","padStart","nameZh","altForm","href","target","rel","index","open","JSON","stringify","evolves","moves","onClick"],"sourceRoot":""}