{"version":3,"file":"static/js/Pokedex.bb90e4c2.chunk.js","mappings":"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","sources":["newComponents/common/Hr.tsx","newComponents/common/Loading.tsx","newComponents/common/TitleSlide.tsx","newComponents/common/Indicator.tsx","newComponents/common/Toggle.tsx","newComponents/common/Buttons.tsx","newComponents/common/SearchBar.tsx","pages/Pokedex/components/Card.tsx","pages/Pokedex/components/SearchBar.tsx","pages/Pokedex/components/Pagination.tsx","pages/Pokedex/components/Filter.tsx","pages/Pokedex/components/Buttons.tsx","pages/Pokedex/components/Header.tsx","pages/Pokedex/UseFilter.ts","pages/Pokedex/Pokedex.tsx"],"sourcesContent":["import clsx from 'clsx';\n\nexport function Hr() {\n  return (\n    <div className=\"relative w-full\">\n      <hr className=\"border-b-1 h-px w-full border-custom-gold\" />\n      <div\n        className={clsx(\n          'absolute right-0 top-1/2 -translate-y-1/2',\n          'h-0 w-0',\n          'border-t-[5px] border-r-[10px]',\n          'border-b-[5px] border-t-transparent',\n          'border-r-custom-gold border-b-transparent'\n        )}\n      />\n      <div\n        className={clsx(\n          'absolute left-0 top-1/2 -translate-y-1/2',\n          'h-0 w-0',\n          'border-t-[5px] border-l-[10px]',\n          'border-b-[5px] border-t-transparent',\n          'border-l-custom-gold border-b-transparent'\n        )}\n      />\n    </div>\n  );\n}\n","import './Loading.css';\n\nexport function Loading() {\n  return (\n    <div className=\"flex h-[50vh] w-full items-center justify-center\">\n      <div className=\"wobbling relative\" />\n    </div>\n  );\n}\n","import clsx from 'clsx';\n\ntype Props = {\n  title: string;\n  color?: string;\n};\n\nexport function TitleSlide({ title, color = 'bg-custom-gold' }: Props) {\n  return (\n    <div className=\"w-full\">\n      <div className={clsx('relative ml-4 box-content', color)}>\n        <div className={clsx('absolute -left-4 h-full w-2', color)} />\n        <h3 className=\"ml-2 text-white\">{title}</h3>\n        <div\n          className={clsx(\n            'absolute right-0 top-0',\n            'h-0 w-0',\n            'border-solid border-transparent border-b-white',\n            'border-b-[28px] border-l-[12px]'\n          )}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport function SubTitleSlide({ title, color = 'bg-custom-gold' }: Props) {\n  return (\n    <div className=\"my-2 w-full space-y-1\">\n      <div className={clsx('relative ml-4 box-content')}>\n        <div className={clsx('absolute -left-4 h-full w-2', color)} />\n        <h3 className=\"ml-2 text-sm\">{title}</h3>\n      </div>\n      <hr />\n    </div>\n  );\n}\n","export function Indicator() {\n  return <span className=\"absolute -top-1 left-4 h-3 w-3 rounded-full bg-secondary\" />;\n}\n","import clsx from 'clsx';\n\ntype Props = {\n  checked: boolean;\n  handleChange: (bool: boolean) => void;\n  text: string;\n};\n\nexport function Toggle({ text, checked, handleChange }: Props) {\n  return (\n    <div className=\"pl-2\">\n      <label className=\"relative inline-flex cursor-pointer items-center\">\n        <input\n          type=\"checkbox\"\n          value=\"\"\n          className=\"peer sr-only\"\n          checked={checked}\n          onChange={(e) => handleChange(e.target.checked)}\n        />\n        <div\n          className={clsx(\n            'peer h-6 w-11 rounded-full bg-gray-200',\n            'after:absolute after:left-[2px] after:top-[2px] after:h-5 after:w-5 after:rounded-full',\n            \"after:border after:border-gray-300 after:bg-white after:transition-all after:content-['']\",\n            'peer-checked:bg-custom-gold peer-checked:after:translate-x-full peer-checked:after:border-white'\n          )}\n        />\n        <span className=\"ml-3 text-sm\">{text}</span>\n      </label>\n    </div>\n  );\n}\n","import clsx from 'clsx';\n\ntype Props = {\n  list: { name: string; val: string }[];\n  currVal: string;\n  updateState: (val: string) => void;\n};\n\nexport function Buttons({ list, currVal, updateState }: Props) {\n  return (\n    <div className=\"flex flex-wrap gap-4\">\n      {list.map((item) => {\n        return (\n          <button\n            key={item.name}\n            className={clsx(\n              'rounded-xl px-2 py-1',\n              'whitespace-nowrap shadow-list-items',\n              currVal === item.val ? 'bg-secondary' : 'bg-secondary/40'\n            )}\n            onClick={() => {\n              updateState(item.val);\n            }}\n          >\n            {item.name}\n          </button>\n        );\n      })}\n    </div>\n  );\n}\n","import clsx from 'clsx';\n\nimport { Icon } from '@/newComponents';\n\ntype Props = {\n  placeholder: string;\n  value: string;\n  onChange: (val: string) => void;\n  children?: JSX.Element;\n};\n\nexport function SearchBar({ placeholder, value, onChange, children }: Props) {\n  return (\n    <>\n      <div className=\"relative my-2 w-full\">\n        <div className=\"pointer-events-none absolute inset-y-0 left-0 flex items-center pl-3\">\n          <Icon.Search className=\"h-5 w-5\" />\n        </div>\n        <input\n          type=\"search\"\n          className={clsx(\n            'block w-full rounded-full border border-gray-300',\n            'bg-gray-50 p-2 pl-10 text-sm text-gray-900'\n          )}\n          placeholder={placeholder}\n          value={value}\n          onChange={(e) => {\n            onChange(e.target.value);\n          }}\n        />\n        {children && (\n          <div className=\"absolute inset-y-0 right-0 flex items-center pr-3\">{children}</div>\n        )}\n      </div>\n    </>\n  );\n}\n","import { Link } from 'react-router-dom';\nimport clsx from 'clsx';\n\nimport { Icon } from '@/newComponents';\nimport { EVIndex, EVName, PokedexFrom, PokedexList, Pokemon } from '@/types/Pokemon';\n\nimport { Display, Filter } from '../Pokedex';\n\ntype Props = {\n  pokemon: Pokemon;\n  filter: Filter;\n  display: Display;\n};\n\nconst Abilities = ({ pokemon }: { pokemon: Pokemon }) => {\n  return (\n    <>\n      {pokemon.abilities.map((ability) => (\n        <span\n          key={ability}\n          className=\"rounded bg-blue-100 px-1.5 py-0.5 text-center text-xs font-semibold text-blue-800\"\n        >\n          {ability}\n        </span>\n      ))}\n      {pokemon.hiddenAbility && (\n        <span className=\"rounded bg-gray-100 px-1.5 py-0.5 text-center text-xs font-semibold text-gray-800\">\n          {[pokemon.hiddenAbility]}\n        </span>\n      )}\n    </>\n  );\n};\n\nconst EVs = ({ pokemon }: { pokemon: Pokemon }) => {\n  return (\n    <>\n      {Array(6)\n        .fill(0)\n        .map((_, i) => ({\n          key: EVName[EVIndex[String(i) as keyof typeof EVIndex] as unknown as keyof typeof EVName],\n          val: pokemon.EVs[i],\n        }))\n        .filter((item) => item.val > 0)\n        .map((item) => `${item.key}: ${item.val}`)\n        .map((t) => (\n          <span\n            key={t}\n            className=\"rounded bg-blue-100 px-1.5 py-0.5 text-center text-xs font-semibold text-blue-800\"\n          >\n            {t}\n          </span>\n        ))}\n    </>\n  );\n};\n\nexport function Card({ pokemon, filter, display }: Props) {\n  const pid = PokedexList.includes(filter.pokedex)\n    ? (pokemon[filter.pokedex as PokedexFrom] || 0).toString().padStart(3, '0')\n    : pokemon.pid.toString().padStart(4, '0');\n\n  return (\n    <div\n      className={clsx(\n        'mt-8 px-4 pt-2 md:mt-20',\n        'flex flex-col gap-y-2',\n        'rounded-xl bg-white',\n        'shadow-list-items hover:shadow-list-items--hover',\n        'hover:translate-x-[-0.2rem] hover:translate-y-[-0.2rem]',\n        'relative'\n      )}\n    >\n      <header className={'relative h-6 md:h-auto'}>\n        <span className=\"hidden whitespace-nowrap md:block\">#{pid}</span>\n        <Icon.Game.PmIcon pm={pokemon} className=\"absolute bottom-0 md:-right-8\" />\n      </header>\n      <hr className=\"border-0 border-t-[1px] border-[#A29834]\" />\n      <div className=\"flex h-full flex-col justify-between gap-y-2\">\n        <div className={clsx('grid grid-cols-1 md:grid-cols-2')}>\n          <div className=\"flex flex-col items-center gap-y-1 md:items-start\">\n            <p className=\"text-center md:text-start\">\n              <span className=\"block whitespace-nowrap md:hidden\">#{pid}</span>\n              {pokemon.nameZh}\n              {pokemon.altForm && (\n                <span className=\"block text-xs font-thin\">({pokemon.altForm})</span>\n              )}\n            </p>\n            <div className=\"flex gap-x-1\">\n              {pokemon.types.map((type) => (\n                <Icon.Game.Type type={type} key={type} />\n              ))}\n            </div>\n          </div>\n          <div className=\"hidden md:block\">\n            <div className=\"flex flex-col gap-y-2\">\n              <Abilities pokemon={pokemon} />\n            </div>\n          </div>\n        </div>\n        <div className={clsx(display.EVs || display.ability ? 'block' : 'hidden')}>\n          {display.ability && (\n            <p className=\"mt-2 flex flex-col flex-wrap justify-center gap-2 whitespace-nowrap md:flex-row md:justify-start\">\n              <Abilities pokemon={pokemon} />\n            </p>\n          )}\n          {display.EVs && (\n            <p className=\"mt-2 flex flex-col flex-wrap justify-center gap-2 whitespace-nowrap md:flex-row md:justify-start\">\n              <EVs pokemon={pokemon} />\n            </p>\n          )}\n        </div>\n      </div>\n      <Link\n        className={'stretchedLink'}\n        to={`/pokedex/${pokemon.nameZh}${pokemon.altForm ? '-' + pokemon.altForm : ''}`}\n      />\n    </div>\n  );\n}\n","import clsx from 'clsx';\n\nimport { Indicator } from '@/newComponents/common';\nimport { Icon } from '@/newComponents';\nimport { BoolKeys } from '@/utils';\n\nimport { FilterButton } from '.';\nimport { Display } from '../Pokedex';\n\ntype Props = {\n  value: string;\n  onChange: (val: string) => void;\n\n  display: Display;\n  toggleDisplay: (key: BoolKeys<Display>[keyof Display]) => (bool: boolean) => void;\n\n  hasFilter: Boolean;\n};\n\nexport function SearchBar({ value, onChange, display, toggleDisplay, hasFilter }: Props) {\n  return (\n    <>\n      <div className=\"relative my-2 w-full\">\n        <div className=\"pointer-events-none absolute inset-y-0 left-0 flex items-center pl-3\">\n          <Icon.Search className=\"h-5 w-5\" />\n        </div>\n        <input\n          type=\"search\"\n          className={clsx(\n            'block w-full rounded-full border border-gray-300',\n            'bg-gray-50 p-2 pl-10 text-sm text-gray-900'\n          )}\n          placeholder=\"搜尋 名稱(中/英/日), 樣子\"\n          value={value}\n          onChange={(e) => {\n            onChange(e.target.value);\n          }}\n        />\n        <div className=\"absolute inset-y-0 right-0 flex items-center pr-3\">\n          <FilterButton\n            checked={display.advancedFilter}\n            toggleState={toggleDisplay('advancedFilter')}\n          />\n          {hasFilter && (\n            <div className=\"relative -top-3 right-6\">\n              <Indicator />\n            </div>\n          )}\n        </div>\n      </div>\n    </>\n  );\n}\n","import clsx from 'clsx';\n\nimport { Icon } from '@/newComponents';\nimport { ValueKeys } from '@/utils';\nimport { Filter } from '../Pokedex';\n\ntype Props = {\n  currentPage: number;\n  totalPages: number;\n  updateNumberState: (\n    key: ValueKeys<Filter, number>[keyof Filter],\n    fn: (val: number) => number\n  ) => void;\n};\n\nconst pagingButtonLength = window.screen.width < 768 ? 1 : 3;\n\nexport function Pagination({ currentPage, totalPages, updateNumberState }: Props) {\n  return (\n    <nav>\n      <ul className=\"inline-flex -space-x-px text-sm\">\n        <li>\n          <button\n            onClick={() => updateNumberState('page', (n) => Math.max(1, n - 1))}\n            className={clsx(\n              'ml-0 flex h-8 items-center justify-center',\n              'rounded-l-lg border border-gray-300',\n              'bg-white px-3 leading-tight text-gray-500',\n              'hover:bg-gray-100 hover:text-gray-700',\n              currentPage === 1 && 'cursor-not-allowed'\n            )}\n          >\n            前一頁\n          </button>\n        </li>\n        {currentPage > pagingButtonLength && (\n          <>\n            <li>\n              <button\n                onClick={() => updateNumberState('page', () => 1)}\n                className={clsx(\n                  'ml-0 flex h-8 items-center justify-center',\n                  'border border-gray-300',\n                  'bg-white px-3 leading-tight text-gray-500',\n                  'hover:bg-gray-100 hover:text-gray-700'\n                )}\n              >\n                1\n              </button>\n            </li>\n            <li\n              className={clsx(\n                'ml-0 flex h-8 items-center justify-center',\n                'border border-gray-300',\n                'bg-white px-3 leading-tight text-gray-500'\n              )}\n            >\n              ...\n            </li>\n          </>\n        )}\n        {new Array(totalPages)\n          .fill(0)\n          .map((_, i) => i + 1)\n          .filter((n) => {\n            return Math.abs(n - currentPage) < pagingButtonLength;\n          })\n          .map((n) => (\n            <li key={n}>\n              <button\n                onClick={() => updateNumberState('page', () => n)}\n                className={clsx(\n                  'ml-0 flex h-8 items-center justify-center',\n                  'border border-gray-300',\n                  'px-3 leading-tight',\n                  'hover:bg-gray-100 hover:text-gray-700',\n                  n === currentPage ? 'bg-gray-100 text-gray-700' : 'bg-white text-gray-500'\n                )}\n              >\n                {n}\n              </button>\n            </li>\n          ))}\n        {totalPages - currentPage >= pagingButtonLength && (\n          <>\n            <li\n              className={clsx(\n                'ml-0 flex h-8 items-center justify-center',\n                'border border-gray-300',\n                'bg-white px-3 leading-tight text-gray-500'\n              )}\n            >\n              ...\n            </li>\n            <li>\n              <button\n                onClick={() => updateNumberState('page', () => totalPages)}\n                className={clsx(\n                  'ml-0 flex h-8 items-center justify-center',\n                  'border border-gray-300',\n                  'bg-white px-3 leading-tight text-gray-500',\n                  'hover:bg-gray-100 hover:text-gray-700'\n                )}\n              >\n                {totalPages}\n              </button>\n            </li>\n          </>\n        )}\n        <li>\n          <button\n            onClick={() => {\n              updateNumberState('page', (n) => {\n                return Math.min(totalPages, n + 1);\n              });\n            }}\n            className={clsx(\n              'ml-0 flex h-8 items-center justify-center',\n              'rounded-r-lg border border-gray-300',\n              'bg-white px-3 leading-tight text-gray-500',\n              'hover:bg-gray-100 hover:text-gray-700',\n              currentPage === totalPages && 'cursor-not-allowed'\n            )}\n          >\n            後一頁\n          </button>\n        </li>\n      </ul>\n    </nav>\n  );\n}\n\nexport function PaginationMobile({\n  currentPage,\n  totalPages,\n  updateNumberState,\n  length,\n}: Props & { length: number }) {\n  return (\n    <>\n      <button onClick={() => updateNumberState('page', (n) => Math.max(1, n - 1))}>\n        <Icon.ArrowBack className={clsx(currentPage === 1 ? 'fill-gray-400' : 'fill-white')} />\n      </button>\n      <p>\n        第{currentPage}頁，共{totalPages}頁 ｜ {length}種符合\n      </p>\n      <button onClick={() => updateNumberState('page', (n) => Math.min(totalPages, n + 1))}>\n        <Icon.ArrowForward\n          className={clsx(currentPage === totalPages ? 'fill-gray-400' : 'fill-white')}\n        />\n      </button>\n    </>\n  );\n}\n","import { ChangeEvent } from 'react';\n\nimport { Icon } from '@/newComponents';\n\ntype Props = {\n  checked: boolean;\n  toggleState: (bool: boolean) => void;\n};\n\nexport function FilterButton({ checked, toggleState }: Props) {\n  return (\n    <>\n      <input\n        type=\"checkbox\"\n        name={'filter'}\n        id={'filter'}\n        className=\"hidden\"\n        checked={checked}\n        onChange={(event: ChangeEvent<HTMLInputElement>) => {\n          toggleState(event.target.checked);\n        }}\n      />\n      <label htmlFor={'filter'} className=\"flex cursor-pointer flex-col items-center\">\n        <Icon.Filter className=\"h-6 w-6\" />\n      </label>\n    </>\n  );\n}\n","import clsx from 'clsx';\n\ntype Props = {\n  list: { name: string; val: string }[];\n  currVal: string | Set<string>;\n  updateState: (val: string) => void;\n};\n\nexport function Buttons({ list, currVal, updateState }: Props) {\n  return (\n    <div className=\"flex flex-wrap gap-4\">\n      {list.map((item) => {\n        return (\n          <button\n            key={item.name}\n            className={clsx(\n              'rounded-xl px-2 py-1',\n              'whitespace-nowrap shadow-list-items',\n              typeof currVal === 'string'\n                ? currVal === item.val\n                  ? 'bg-secondary'\n                  : 'bg-secondary/40'\n                : currVal.has(item.val)\n                ? 'bg-secondary'\n                : 'bg-secondary/40'\n            )}\n            onClick={() => {\n              updateState(item.val);\n            }}\n          >\n            {item.name}\n          </button>\n        );\n      })}\n    </div>\n  );\n}\n","import clsx from 'clsx';\n\nimport { SubTitleSlide, TitleSlide, Toggle } from '@/newComponents/common';\nimport { Icon } from '@/newComponents';\nimport { EVName, TypeEnum } from '@/types/Pokemon';\nimport { BoolKeys, ValueKeys } from '@/utils';\n\nimport { Filter, Display } from '../Pokedex';\nimport { SearchBar, Buttons } from '.';\n\ntype Props = {\n  filter: Filter;\n  abilities: string[];\n  updateState: (key: ValueKeys<Filter, string>[keyof Filter]) => (val: string) => void;\n  updateSetState: (key: ValueKeys<Filter, Set<string>>[keyof Filter]) => (val: string) => void;\n\n  display: Display;\n  toggleDisplay: (key: BoolKeys<Display>[keyof Display]) => (bool: boolean) => void;\n};\n\nexport function Header({\n  filter,\n  abilities,\n  updateState,\n  updateSetState,\n  display,\n  toggleDisplay,\n}: Props) {\n  const typeUpdate = updateSetState('types');\n  const abilityUpdate = updateState('ability');\n\n  const hasFilter = [filter.ability, filter.EV].filter(Boolean).length > 0 || filter.tags.size > 0;\n\n  const filterList = [\n    { value: filter.ability, name: '特性', key: 'ability' },\n    { value: EVName[filter.EV as keyof typeof EVName] || '', name: '努力值', key: 'EV' },\n  ];\n\n  const filterListSet = [\n    [...filter.tags].map((tag) => ({ value: tag, name: 'tag', key: 'tags' })),\n  ].flat();\n\n  return (\n    <header>\n      <div className=\"flex flex-col justify-between gap-x-2 md:flex-row md:items-center\">\n        <div className=\"flex items-center gap-2\">\n          <div className={clsx('rounded-xl p-2', 'bg-custom-red', 'hidden md:block')}>\n            <Icon.Books className=\"h-5 w-5 fill-current\" />\n          </div>\n          <h2 className=\"text-xl\">圖鑑清單</h2>\n        </div>\n        <div className=\"flex w-full items-center gap-x-3 md:w-96\">\n          <SearchBar\n            value={filter.keyword}\n            onChange={updateState('keyword')}\n            display={display}\n            toggleDisplay={toggleDisplay}\n            hasFilter={hasFilter}\n          />\n        </div>\n      </div>\n      <div className=\"flex flex-col gap-2\">\n        <SubTitleSlide title=\"圖鑑分類\" />\n        <Buttons\n          list={[\n            { name: '帕底亞', val: 'paldea' },\n            { name: '北上', val: 'kitakami' },\n            { name: '洗翠', val: 'hisui' },\n            { name: '全國', val: 'national' },\n            { name: 'HOME入境 / 活動', val: 'home' },\n          ]}\n          currVal={filter.pokedex}\n          updateState={updateState('pokedex')}\n        />\n        <SubTitleSlide title=\"屬性\" />\n        <div className=\"flex w-full flex-wrap justify-items-center gap-x-4 gap-y-3 pb-2 pl-2\">\n          {Object.keys(TypeEnum).map((type) => (\n            <button onClick={() => typeUpdate(type)} key={type}>\n              <Icon.Game.Type\n                type={type}\n                className={clsx(\n                  'h-8 w-8',\n                  filter.types.size > 0 && !filter.types.has(type) && 'opacity-30'\n                )}\n              />\n            </button>\n          ))}\n        </div>\n      </div>\n      <div className={clsx('mt-2 flex-col gap-2', display.advancedFilter ? 'flex' : 'hidden')}>\n        <TitleSlide title=\"進階搜尋\" />\n        <SubTitleSlide title=\"特性\" />\n        <div className=\"block md:hidden\">\n          <Toggle\n            text=\"顯示特性\"\n            checked={display.ability}\n            handleChange={toggleDisplay('ability')}\n          />\n        </div>\n        <div className=\"relative mb-2 w-60\">\n          <div className=\"pointer-events-none absolute inset-y-0 left-0 flex items-center pl-3\">\n            <Icon.Search className=\"h-5 w-5\" />\n          </div>\n          <input\n            type=\"search\"\n            className={clsx(\n              'block w-full rounded-lg border border-gray-300',\n              'bg-gray-50 p-2 pl-10 text-sm text-gray-900'\n            )}\n            placeholder=\"搜尋特性\"\n            value={filter.ability}\n            onChange={(e) => {\n              abilityUpdate(e.target.value);\n            }}\n          />\n        </div>\n        <Buttons\n          list={abilities\n            .filter((ability) => {\n              return ability.split('').some((char) => filter.ability.includes(char));\n            })\n            .map((ability) => ({ name: ability, val: ability }))}\n          currVal={filter.ability}\n          updateState={abilityUpdate}\n        />\n        <SubTitleSlide title=\"努力值\" />\n        <Toggle text=\"顯示努力值\" checked={display.EVs} handleChange={toggleDisplay('EVs')} />\n        <span className=\"text-sm\">(篩選單獨只有這此項的清單)</span>\n        <Buttons\n          list={[\n            { name: 'HP', val: 'HP' },\n            { name: '攻擊', val: 'Atk' },\n            { name: '防禦', val: 'Def' },\n            { name: '特攻', val: 'SpA' },\n            { name: '特防', val: 'SpD' },\n            { name: '速度', val: 'Spe' },\n          ]}\n          currVal={filter.EV}\n          updateState={updateState('EV')}\n        />\n        <SubTitleSlide title=\"tags\" />\n        <Buttons\n          list={[\n            { name: '傳說的寶可夢', val: '傳說的寶可夢' },\n            { name: '幻之寶可夢', val: '幻之寶可夢' },\n            { name: '悖謬寶可夢', val: '悖謬寶可夢' },\n            { name: '准傳說的寶可夢', val: '准傳說的寶可夢' },\n            { name: '朱版限定', val: '朱版限定' },\n            { name: '紫版限定', val: '紫版限定' },\n          ]}\n          currVal={filter.tags}\n          updateState={updateSetState('tags')}\n        />\n      </div>\n      <div\n        className={clsx(\n          'flex-col gap-2',\n          display.advancedFilter === false && hasFilter ? 'flex' : 'hidden'\n        )}\n      >\n        <SubTitleSlide title=\"進階篩選項目：\" />\n        <div className=\"flex flex-wrap gap-4\">\n          {filterList\n            .filter(({ value }) => value !== '')\n            .map(({ value, name, key }) => (\n              <span\n                key={key}\n                className={clsx(\n                  'flex items-center gap-x-2',\n                  'rounded-xl bg-amber-100 px-2 py-1 shadow-list-items'\n                )}\n              >\n                {name}：{value}\n                <Icon.Close\n                  className=\"h-3 w-3 cursor-pointer\"\n                  onClick={() => {\n                    updateState(key as Parameters<typeof updateState>[0])('');\n                  }}\n                />\n              </span>\n            ))}\n          {filterListSet.map(({ value, name, key }) => (\n            <span\n              key={`${name}-${value}`}\n              className={clsx(\n                'flex items-center gap-x-2',\n                'rounded-xl bg-amber-100 px-2 py-1 shadow-list-items',\n                'whitespace-nowrap'\n              )}\n            >\n              {name}：{value}\n              <Icon.Close\n                className=\"h-3 w-3 cursor-pointer\"\n                onClick={() => {\n                  updateSetState(key as keyof typeof updateSetState)(value);\n                }}\n              />\n            </span>\n          ))}\n        </div>\n      </div>\n    </header>\n  );\n}\n","import { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { BoolKeys, ValueKeys } from '@/utils';\nimport { Filter, Display } from './Pokedex';\nimport { PokedexFrom } from '@/types/Pokemon';\n\nconst localStorageKey = 'pokeDexPage';\n\nfunction getCache(): Record<string, string> {\n  const cacheStr = localStorage.getItem(localStorageKey);\n  let cacheObj = {};\n  if (cacheStr !== null) {\n    cacheObj = JSON.parse(cacheStr);\n  }\n\n  return cacheObj;\n}\n\nexport function UseFilter() {\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  let cacheObj = getCache();\n  useEffect(() => {\n    for (const key of Object.keys(cacheObj)) {\n      if (searchParams.get(key) === null) {\n        setSearchParams((prev) => {\n          prev.set(key, cacheObj[key as keyof typeof cacheObj]);\n          return prev;\n        });\n      } else {\n      }\n    }\n  }, [cacheObj, searchParams, setSearchParams]);\n\n  const filter: Filter = {\n    keyword: searchParams.get('keyword') || '',\n    pokedex: (searchParams.get('pokedex') || 'paldea') as PokedexFrom | 'home' | 'national',\n    page: Number(searchParams.get('page') || 1),\n    types: new Set((searchParams.get('types') || '').split('-').filter(Boolean)),\n    ability: searchParams.get('ability') || '',\n    EV: searchParams.get('EV') || '',\n    tags: new Set((searchParams.get('tags') || '').split('-').filter(Boolean)),\n  };\n\n  const [display, setDisplay] = useState<Display>({\n    advancedFilter: false,\n    EVs: false,\n    ability: false,\n  });\n\n  const updateState = (key: ValueKeys<Filter, string>[keyof Filter]) => {\n    return (val: string) => {\n      if (val === '') {\n        setSearchParams((prev) => {\n          prev.delete(key);\n          delete cacheObj[key as keyof typeof cacheObj];\n\n          localStorage.setItem(localStorageKey, JSON.stringify(cacheObj));\n          return prev;\n        });\n      } else {\n        setSearchParams((prev) => {\n          if (prev.has(key) && prev.get(key) === val) {\n            prev.delete(key);\n            delete cacheObj[key as keyof typeof cacheObj];\n          } else {\n            prev.set(key, val);\n            cacheObj[key as keyof typeof cacheObj] = val;\n          }\n          prev.delete('page');\n          delete cacheObj['page'];\n\n          localStorage.setItem(localStorageKey, JSON.stringify(cacheObj));\n          return prev;\n        });\n      }\n    };\n  };\n\n  const updateSetState = (key: ValueKeys<Filter, Set<string>>[keyof Filter]) => {\n    return (val: string) => {\n      setSearchParams((prev) => {\n        const vals = new Set((prev.get(key) || '').split('-').filter(Boolean));\n        if (vals.has(val)) {\n          vals.delete(val);\n        } else {\n          vals.add(val);\n        }\n\n        if (vals.size === 0) {\n          prev.delete(key);\n          delete cacheObj[key as keyof typeof cacheObj];\n        } else {\n          prev.set(key, [...vals].join('-'));\n          cacheObj[key as keyof typeof cacheObj] = [...vals].join('-');\n        }\n\n        prev.delete('page');\n        delete cacheObj['page'];\n\n        localStorage.setItem(localStorageKey, JSON.stringify(cacheObj));\n        return prev;\n      });\n    };\n  };\n\n  const updateNumberState = (\n    key: ValueKeys<Filter, number>[keyof Filter],\n    fn: (val: number) => number\n  ) => {\n    setSearchParams((prev) => {\n      const val = prev.get(key) || '1';\n      const newVal = fn(Number(val));\n      prev.set(key, String(newVal));\n\n      return prev;\n    });\n  };\n\n  const toggleDisplay = (key: BoolKeys<Display>[keyof Display]) => {\n    return (bool: boolean) => {\n      setDisplay((prev) => {\n        const newDisplay = {\n          ...prev,\n          [key]: bool,\n        };\n        return newDisplay;\n      });\n    };\n  };\n\n  useEffect(() => {\n    const cacheObj: Record<string, string> = {};\n    searchParams.forEach((val, key) => {\n      cacheObj[key] = val;\n    });\n\n    if (Object.keys(cacheObj).length > 0) {\n      localStorage.setItem(localStorageKey, JSON.stringify(cacheObj));\n    }\n  }, [searchParams]);\n\n  return {\n    filter,\n    updateState,\n    updateNumberState,\n    updateSetState,\n\n    display,\n    toggleDisplay,\n  };\n}\n","import clsx from 'clsx';\n\nimport { EVIndex, PokedexFrom, PokedexList, Pokemon } from '@/types/Pokemon';\nimport { Hr, Loading } from '@/newComponents/common';\nimport { usePokemonListContext } from '@/newComponents/contexts';\nimport { Card, Pagination, PaginationMobile, Header } from './components';\nimport { UseFilter } from './UseFilter';\nimport { useEffect } from 'react';\n\nexport type Filter = {\n  keyword: string;\n  pokedex: PokedexFrom | 'home' | 'national';\n  page: number;\n  types: Set<string>;\n  ability: string;\n  EV: string;\n  tags: Set<string>;\n};\n\nexport type Display = {\n  advancedFilter: boolean;\n  ability: boolean;\n  EVs: boolean;\n};\n\nconst itemsPerPage = 30;\n\nfunction Pokedex() {\n  const { filter, updateState, updateNumberState, updateSetState, display, toggleDisplay } =\n    UseFilter();\n\n  let { pokemonList: data } = usePokemonListContext();\n\n  useEffect(() => {\n    document.title = `${filter.pokedex} Pokédex`;\n  }, [filter.pokedex]);\n\n  if (data.length === 0) {\n    return <Loading />;\n  }\n\n  const abilities = [\n    ...new Set(\n      data\n        .map((pm) => pm.abilities.concat([pm.hiddenAbility || '']))\n        .flat()\n        .filter(Boolean)\n    ),\n  ].sort();\n\n  data = data.filter(filterFn).filter(filterPokedex).sort(orderBy);\n\n  const totalPages = Math.ceil(data.length / itemsPerPage);\n  const startIndex = (filter.page - 1) * itemsPerPage;\n  const currentData = data.slice(startIndex, startIndex + itemsPerPage);\n\n  function filterFn(pm: Pokemon) {\n    let display = true;\n\n    if (filter.keyword !== '') {\n      const checkList = [pm.nameZh, pm.nameEn.toLowerCase(), pm.nameJp, pm.altForm || ''];\n      const keyword = filter.keyword.toLowerCase();\n      display = display && checkList.some((val) => val.includes(keyword));\n    }\n\n    if (display && filter.types.size > 0) {\n      if (filter.types.size === 1) {\n        display = display && pm.types.some((type) => filter.types.has(type));\n      } else if (filter.types.size === 2 && pm.types.length === 2) {\n        display = display && pm.types.every((type) => filter.types.has(type));\n      } else {\n        display = false;\n      }\n    }\n\n    if (display && filter.ability !== '' && abilities.includes(filter.ability)) {\n      const checkList = [...pm.abilities, pm.hiddenAbility];\n      display = display && checkList.some((ability) => ability === filter.ability);\n    }\n\n    if (display && filter.EV !== '') {\n      const index = EVIndex[filter.EV as keyof typeof EVIndex];\n      display = display && pm.EVs.every((ev, i) => (i === index ? ev > 0 : ev === 0));\n    }\n\n    if (display && filter.tags.size > 0) {\n      display = display && pm.tags.some((tag) => filter.tags.has(tag));\n    }\n\n    return display;\n  }\n\n  function filterPokedex(pm: Pokemon) {\n    if (PokedexList.includes(filter.pokedex)) {\n      return pm[filter.pokedex as PokedexFrom];\n    } else if (filter.pokedex === 'home') {\n      return pm.kitakami === null && pm.paldea === null;\n    } else {\n      return true;\n    }\n  }\n\n  function orderBy(a: Pokemon, b: Pokemon) {\n    if (PokedexList.includes(filter.pokedex)) {\n      if ((a[filter.pokedex as PokedexFrom] || 0) - (b[filter.pokedex as PokedexFrom] || 0) !== 0) {\n        return (a[filter.pokedex as PokedexFrom] || 0) - (b[filter.pokedex as PokedexFrom] || 0);\n      } else {\n        return a.link.localeCompare(b.link);\n      }\n    } else {\n      if (a.pid - b.pid !== 0) {\n        return a.pid - b.pid;\n      } else {\n        return a.link.localeCompare(b.link);\n      }\n    }\n  }\n\n  return (\n    <div className=\"mb-4 flex flex-col gap-y-4\">\n      <Header\n        filter={filter}\n        abilities={abilities}\n        updateState={updateState}\n        updateSetState={updateSetState}\n        display={display}\n        toggleDisplay={toggleDisplay}\n      />\n      <Hr />\n      <p className={clsx(data.length > 0 && 'hidden')}>查無符合項目，請調整搜尋項目。</p>\n      {data.length > 0 && (\n        <div className=\"grid grid-cols-list-mobile justify-around gap-4 pt-4 pb-8 md:grid-cols-list\">\n          {currentData.map((pm) => (\n            <Card pokemon={pm} key={pm.link} filter={filter} display={display} />\n          ))}\n        </div>\n      )}\n      <footer className=\"hidden justify-end md:flex\">\n        <Pagination\n          currentPage={filter.page}\n          totalPages={totalPages}\n          updateNumberState={updateNumberState}\n        />\n      </footer>\n      <footer\n        className={clsx(\n          'fixed bottom-0 left-0 right-0 flex h-12 items-center justify-between',\n          'bg-primary/60 px-4 text-white md:hidden'\n        )}\n      >\n        <PaginationMobile\n          currentPage={filter.page}\n          totalPages={totalPages}\n          updateNumberState={updateNumberState}\n          length={data.length}\n        />\n      </footer>\n    </div>\n  );\n}\n\nexport default Pokedex;\n"],"names":["Hr","className","clsx","Loading","TitleSlide","title","color","SubTitleSlide","Indicator","Toggle","text","checked","handleChange","type","value","onChange","e","target","Buttons","list","currVal","updateState","map","item","val","onClick","name","SearchBar","placeholder","children","Abilities","pokemon","abilities","ability","hiddenAbility","EVs","Array","fill","_","i","key","EVName","EVIndex","String","filter","t","Card","display","pid","PokedexList","includes","pokedex","toString","padStart","pm","nameZh","altForm","types","to","toggleDisplay","hasFilter","FilterButton","advancedFilter","toggleState","pagingButtonLength","window","screen","width","Pagination","currentPage","totalPages","updateNumberState","n","Math","max","abs","min","PaginationMobile","length","id","event","htmlFor","has","Header","updateSetState","typeUpdate","abilityUpdate","EV","Boolean","tags","size","filterList","filterListSet","tag","flat","keyword","Object","keys","TypeEnum","split","some","char","localStorageKey","UseFilter","useSearchParams","searchParams","setSearchParams","cacheObj","cacheStr","localStorage","getItem","JSON","parse","getCache","useEffect","get","prev","set","page","Number","Set","useState","setDisplay","forEach","setItem","stringify","delete","fn","newVal","vals","add","join","bool","data","usePokemonListContext","pokemonList","document","concat","sort","checkList","nameEn","toLowerCase","nameJp","every","index","ev","kitakami","paldea","a","b","link","localeCompare","ceil","startIndex","currentData","slice"],"sourceRoot":""}